{"version":3,"sources":["node_modules/@angular/cdk/esm2015/bidi.js","node_modules/@angular/cdk/esm2015/coercion.js","node_modules/@angular/cdk/esm2015/collections.js","node_modules/@angular/cdk/esm2015/drag-drop.js","node_modules/@angular/cdk/esm2015/platform.js","node_modules/@angular/cdk/esm2015/scrolling.js","src/app/actions/actions.page.html","src/app/actions/actions-routing.module.ts","src/app/actions/actions.module.ts","src/app/actions/actions.page.scss","src/app/actions/actions.page.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken, EventEmitter, Inject, Injectable, Optional, Directive, Output, Input, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.ngInjectableDef = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.decorators = [\n    { type: Directive, args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir',\n            },] },\n];\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [Dir],\n                declarations: [Dir],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule, DIR_DOCUMENT_FACTORY as ɵa };\n//# sourceMappingURL=bidi.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat((/** @type {?} */ (value)))) && !isNaN(Number(value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Coerces a value to a CSS pixel value.\n * @param {?} value\n * @return {?}\n */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n * @template T\n * @param {?} elementOrRef\n * @return {?}\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray, coerceCssPixelValue, coerceElement };\n//# sourceMappingURL=coercion.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Observable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n * @template T\n */\nclass DataSource {\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return this._data instanceof Observable ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        /**\n         * Event emitted when the value has changed.\n         * @deprecated Use `changed` instead.\n         * \\@breaking-change 8.0.0 To be changed to `changed`\n         */\n        this.onChange = this.changed;\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */ UniqueSelectionDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { UniqueSelectionDispatcher, ArrayDataSource, isDataSource, DataSource, getMultipleValuesInSingleSelectionError, SelectionModel };\n//# sourceMappingURL=collections.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { normalizePassiveListenerOptions, _supportsShadowDom } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { Subscription, Subject, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { startWith, takeUntil, take, map, switchMap, tap } from 'rxjs/operators';\nimport { Injectable, NgZone, Inject, InjectionToken, NgModule, ContentChildren, ElementRef, EventEmitter, forwardRef, Input, Output, Optional, Directive, ChangeDetectorRef, SkipSelf, ContentChild, ViewContainerRef, isDevMode, TemplateRef, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * \\@docs-private\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = (/** @type {?} */ (source[key]));\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * \\@docs-private\n * @param {?} element Element on which to toggle the drag interactions.\n * @param {?} enable Whether the drag interactions should be enabled.\n * @return {?}\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    /** @type {?} */\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Parses a CSS time value to milliseconds.\n * @param {?} value\n * @return {?}\n */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    /** @type {?} */\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/**\n * Gets the transform transition duration, including the delay, of an element in milliseconds.\n * @param {?} element\n * @return {?}\n */\nfunction getTransformTransitionDurationInMs(element) {\n    /** @type {?} */\n    const computedStyle = getComputedStyle(element);\n    /** @type {?} */\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    /** @type {?} */\n    const property = transitionedProperties.find((/**\n     * @param {?} prop\n     * @return {?}\n     */\n    prop => prop === 'transform' || prop === 'all'));\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    /** @type {?} */\n    const propertyIndex = transitionedProperties.indexOf(property);\n    /** @type {?} */\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    /** @type {?} */\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/**\n * Parses out multiple values from a computed style into an array.\n * @param {?} computedStyle\n * @param {?} name\n * @return {?}\n */\nfunction parseCssPropertyValue(computedStyle, name) {\n    /** @type {?} */\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map((/**\n     * @param {?} part\n     * @return {?}\n     */\n    part => part.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options that can be used to bind a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Options that can be used to bind an active event listener.\n * @type {?}\n */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n * @type {?}\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n * \\@docs-private\n * @template T\n */\nclass DragRef {\n    /**\n     * @param {?} element\n     * @param {?} _config\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /**\n         * CSS `transform` that is applied to the element while it's being dragged.\n         */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Emits when the item is being moved.\n         */\n        this._moveEvents = new Subject();\n        /**\n         * Subscription to pointer movement events.\n         */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the event that is dispatched when the user lifts their pointer.\n         */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being scrolled.\n         */\n        this._scrollSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to the viewport being resized.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Cached reference to the boundary element.\n         */\n        this._boundaryElement = null;\n        /**\n         * Whether the native dragging interactions have been enabled on the root element.\n         */\n        this._nativeInteractionsEnabled = true;\n        /**\n         * Elements that can be used to drag the draggable item.\n         */\n        this._handles = [];\n        /**\n         * Registered handles that are currently disabled.\n         */\n        this._disabledHandles = new Set();\n        /**\n         * Layout direction of the item.\n         */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits as the drag sequence is being prepared.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new Subject();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new Subject();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new Subject();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /**\n         * Handler for the `mousedown`/`touchstart` events.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                /** @type {?} */\n                const targetHandle = this._handles.find((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => {\n                    /** @type {?} */\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains((/** @type {?} */ (target))));\n                }));\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        });\n        /**\n         * Handler that is invoked when the user moves their pointer after they've initiated a drag.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this._hasStartedDragging) {\n                /** @type {?} */\n                const pointerPosition = this._getPointerPositionOnPage(event);\n                /** @type {?} */\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                /** @type {?} */\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                /** @type {?} */\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    /** @type {?} */\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + (this.dragStartDelay || 0);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._startDragSequence(event)));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            /** @type {?} */\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(event);\n            this._hasMoved = true;\n            event.preventDefault();\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition);\n            }\n            else {\n                /** @type {?} */\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    /** @type {?} */\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                }));\n            }\n        });\n        /**\n         * Handler that is invoked when the user lifts their pointer up, after initiating a drag.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this._endDragSequence(event);\n        });\n        this.withRootElement(element);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Registers the handles that can be used to drag the element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} handles\n     * @return {THIS}\n     */\n    withHandles(handles) {\n        (/** @type {?} */ (this))._handles = handles.map((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => coerceElement(handle)));\n        (/** @type {?} */ (this))._handles.forEach((/**\n         * @param {?} handle\n         * @return {?}\n         */\n        handle => toggleNativeDragInteractions(handle, false)));\n        (/** @type {?} */ (this))._toggleNativeDragInteractions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the preview.\n     * @return {THIS}\n     */\n    withPreviewTemplate(template) {\n        (/** @type {?} */ (this))._previewTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} template Template that from which to stamp out the placeholder.\n     * @return {THIS}\n     */\n    withPlaceholderTemplate(template) {\n        (/** @type {?} */ (this))._placeholderTemplate = template;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} rootElement\n     * @return {THIS}\n     */\n    withRootElement(rootElement) {\n        /** @type {?} */\n        const element = coerceElement(rootElement);\n        if (element !== (/** @type {?} */ (this))._rootElement) {\n            if ((/** @type {?} */ (this))._rootElement) {\n                (/** @type {?} */ (this))._removeRootElementListeners((/** @type {?} */ (this))._rootElement);\n            }\n            element.addEventListener('mousedown', (/** @type {?} */ (this))._pointerDown, activeEventListenerOptions);\n            element.addEventListener('touchstart', (/** @type {?} */ (this))._pointerDown, passiveEventListenerOptions);\n            (/** @type {?} */ (this))._initialTransform = undefined;\n            (/** @type {?} */ (this))._rootElement = element;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} boundaryElement\n     * @return {THIS}\n     */\n    withBoundaryElement(boundaryElement) {\n        (/** @type {?} */ (this))._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        (/** @type {?} */ (this))._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            (/** @type {?} */ (this))._resizeSubscription = (/** @type {?} */ (this))._viewportRuler\n                .change(10)\n                .subscribe((/**\n             * @return {?}\n             */\n            () => (/** @type {?} */ (this))._containInsideBoundaryOnResize()));\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Removes the dragging functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeElement(this._rootElement);\n        }\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._boundaryElement = this._rootElement = this._placeholderTemplate =\n            this._previewTemplate = this._nextSibling = (/** @type {?} */ (null));\n    }\n    /**\n     * Checks whether the element is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param {?} handle Handle element that should be disabled.\n     * @return {?}\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param {?} handle Handle element to be enabled.\n     * @return {?}\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /**\n     * Sets the layout direction of the draggable item.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the container that the item is part of.\n     * @param {?} container\n     * @return {?}\n     */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        /** @type {?} */\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} value New position to be set.\n     * @return {THIS}\n     */\n    setFreeDragPosition(value) {\n        (/** @type {?} */ (this))._activeTransform = { x: 0, y: 0 };\n        (/** @type {?} */ (this))._passiveTransform.x = value.x;\n        (/** @type {?} */ (this))._passiveTransform.y = value.y;\n        if (!(/** @type {?} */ (this))._dropContainer) {\n            (/** @type {?} */ (this))._applyRootElementTransform(value.x, value.y);\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the item's sort order based on the last-known pointer position.\n     * @return {?}\n     */\n    _sortFromLastPointerPosition() {\n        /** @type {?} */\n        const position = this._pointerPositionAtLastDirectionChange;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(position);\n        }\n    }\n    /**\n     * Unsubscribes from the global subscriptions.\n     * @private\n     * @return {?}\n     */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /**\n     * Destroys the preview element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPreview() {\n        if (this._preview) {\n            removeElement(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Destroys the placeholder element and its ViewRef.\n     * @private\n     * @return {?}\n     */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeElement(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = (/** @type {?} */ (null));\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @private\n     * @param {?} event Browser event object that ended the sequence.\n     * @return {?}\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then((/**\n             * @return {?}\n             */\n            () => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            }));\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            }));\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /**\n     * Starts the dragging sequence.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _startDragSequence(event) {\n        // Emit the event on the item before the one on the container.\n        this.started.next({ source: this });\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        if (this._dropContainer) {\n            /** @type {?} */\n            const element = this._rootElement;\n            // Grab the `nextSibling` before the preview and placeholder\n            // have been created so we don't get the preview by accident.\n            this._nextSibling = element.nextSibling;\n            /** @type {?} */\n            const preview = this._preview = this._createPreviewElement();\n            /** @type {?} */\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild((/** @type {?} */ (element.parentNode)).replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this._dropContainer.start();\n        }\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @private\n     * @param {?} referenceElement Element that started the drag sequence.\n     * @param {?} event Browser event object that started the sequence.\n     * @return {?}\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        /** @type {?} */\n        const isDragging = this.isDragging();\n        /** @type {?} */\n        const isTouchSequence = isTouchEvent(event);\n        /** @type {?} */\n        const isAuxiliaryMouseButton = !isTouchSequence && ((/** @type {?} */ (event))).button !== 0;\n        /** @type {?} */\n        const rootElement = this._rootElement;\n        /** @type {?} */\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && ((/** @type {?} */ (event.target))).draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor;\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        this._initialContainer = (/** @type {?} */ (this._dropContainer));\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        }));\n        if (this._boundaryElement) {\n            this._boundaryRect = this._boundaryElement.getBoundingClientRect();\n        }\n        // If we have a custom preview template, the element won't be visible anyway so we avoid the\n        // extra `getBoundingClientRect` calls and just move the preview next to the cursor.\n        this._pickupPositionInElement = this._previewTemplate && this._previewTemplate.template ?\n            { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        /** @type {?} */\n        const pointerPosition = this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /**\n     * Cleans up the DOM artifacts that were added to facilitate the element being dragged.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        if (this._nextSibling) {\n            (/** @type {?} */ (this._nextSibling.parentNode)).insertBefore(this._rootElement, this._nextSibling);\n        }\n        else {\n            coerceElement(this._initialContainer.element).appendChild(this._rootElement);\n        }\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = (/** @type {?} */ (this._dropContainer));\n            /** @type {?} */\n            const currentIndex = container.getItemIndex(this);\n            /** @type {?} */\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            /** @type {?} */\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            /** @type {?} */\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialContainer.getItemIndex(this),\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance);\n            this._dropContainer = this._initialContainer;\n        }));\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     * @private\n     * @param {?} __0\n     * @return {?}\n     */\n    _updateActiveDropContainer({ x, y }) {\n        // Drop container that draggable has been moved into.\n        /** @type {?} */\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: (/** @type {?} */ (this._dropContainer)) });\n                (/** @type {?} */ (this._dropContainer)).exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = (/** @type {?} */ (newContainer));\n                this._dropContainer.enter(this, x, y);\n                this.entered.next({\n                    item: this,\n                    container: (/** @type {?} */ (newContainer)),\n                    currentIndex: (/** @type {?} */ (newContainer)).getItemIndex(this)\n                });\n            }));\n        }\n        (/** @type {?} */ (this._dropContainer))._startScrollingIfNecessary(x, y);\n        (/** @type {?} */ (this._dropContainer))._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     * @private\n     * @return {?}\n     */\n    _createPreviewElement() {\n        /** @type {?} */\n        const previewConfig = this._previewTemplate;\n        /** @type {?} */\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        /** @type {?} */\n        let preview;\n        if (previewTemplate) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (previewConfig)).viewContainer.createEmbeddedView(previewTemplate, (/** @type {?} */ (previewConfig)).context);\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            preview.style.transform =\n                getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n        }\n        else {\n            /** @type {?} */\n            const element = this._rootElement;\n            /** @type {?} */\n            const elementRect = element.getBoundingClientRect();\n            preview = deepCloneNode(element);\n            preview.style.width = `${elementRect.width}px`;\n            preview.style.height = `${elementRect.height}px`;\n            preview.style.transform = getTransform(elementRect.left, elementRect.top);\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: '1000'\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @private\n     * @return {?} Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        /** @type {?} */\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                /** @type {?} */\n                const handler = (/** @type {?} */ (((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                }))));\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                /** @type {?} */\n                const timeout = setTimeout((/** @type {?} */ (handler)), duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            }));\n        }));\n    }\n    /**\n     * Creates an element that will be shown instead of the current element while dragging.\n     * @private\n     * @return {?}\n     */\n    _createPlaceholderElement() {\n        /** @type {?} */\n        const placeholderConfig = this._placeholderTemplate;\n        /** @type {?} */\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        /** @type {?} */\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = (/** @type {?} */ (placeholderConfig)).viewContainer.createEmbeddedView(placeholderTemplate, (/** @type {?} */ (placeholderConfig)).context);\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @private\n     * @param {?} referenceElement Element that initiated the dragging.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        /** @type {?} */\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        /** @type {?} */\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        /** @type {?} */\n        const x = point.pageX - referenceRect.left - this._scrollPosition.left;\n        /** @type {?} */\n        const y = point.pageY - referenceRect.top - this._scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /**\n     * Determines the point of the page that was touched by the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getPointerPositionOnPage(event) {\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        /** @type {?} */\n        const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n        return {\n            x: point.pageX - this._scrollPosition.left,\n            y: point.pageY - this._scrollPosition.top\n        };\n    }\n    /**\n     * Gets the pointer position on the page, accounting for any position constraints.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getConstrainedPointerPosition(event) {\n        /** @type {?} */\n        const point = this._getPointerPositionOnPage(event);\n        /** @type {?} */\n        const constrainedPoint = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        /** @type {?} */\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            constrainedPoint.y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            constrainedPoint.x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            /** @type {?} */\n            const boundaryRect = this._boundaryRect;\n            /** @type {?} */\n            const previewRect = (/** @type {?} */ (this._previewRect));\n            /** @type {?} */\n            const minY = boundaryRect.top + pickupY;\n            /** @type {?} */\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            /** @type {?} */\n            const minX = boundaryRect.left + pickupX;\n            /** @type {?} */\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            constrainedPoint.x = clamp(constrainedPoint.x, minX, maxX);\n            constrainedPoint.y = clamp(constrainedPoint.y, minY, maxY);\n        }\n        return constrainedPoint;\n    }\n    /**\n     * Updates the current drag delta, based on the user's current pointer position on the page.\n     * @private\n     * @param {?} pointerPositionOnPage\n     * @return {?}\n     */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        /** @type {?} */\n        const delta = this._pointerDirectionDelta;\n        /** @type {?} */\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        /** @type {?} */\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        /** @type {?} */\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /**\n     * Toggles the native drag interactions, based on how many handles are registered.\n     * @private\n     * @return {?}\n     */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        /** @type {?} */\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /**\n     * Removes the manually-added event listeners from the root element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @private\n     * @param {?} x New transform value along the X axis.\n     * @param {?} y New transform value along the Y axis.\n     * @return {?}\n     */\n    _applyRootElementTransform(x, y) {\n        /** @type {?} */\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @private\n     * @param {?} currentPosition Current position of the user's pointer.\n     * @return {?}\n     */\n    _getDragDistance(currentPosition) {\n        /** @type {?} */\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /**\n     * Cleans up any cached element dimensions that we don't need after dragging has stopped.\n     * @private\n     * @return {?}\n     */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     * @private\n     * @return {?}\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        /** @type {?} */\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        /** @type {?} */\n        const elementRect = this._rootElement.getBoundingClientRect();\n        /** @type {?} */\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        /** @type {?} */\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        /** @type {?} */\n        const topOverflow = boundaryRect.top - elementRect.top;\n        /** @type {?} */\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param {?} x Desired position of the element along the X axis.\n * @param {?} y Desired position of the element along the Y axis.\n * @return {?}\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/**\n * Creates a deep clone of an element.\n * @param {?} node\n * @return {?}\n */\nfunction deepCloneNode(node) {\n    /** @type {?} */\n    const clone = (/** @type {?} */ (node.cloneNode(true)));\n    /** @type {?} */\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    /** @type {?} */\n    const descendantCanvases = node.querySelectorAll('canvas');\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    // `cloneNode` won't transfer the content of `canvas` elements so we have to do it ourselves.\n    // We match up the cloned canvas to their sources using their index in the DOM.\n    if (descendantCanvases.length) {\n        /** @type {?} */\n        const cloneCanvases = clone.querySelectorAll('canvas');\n        for (let i = 0; i < descendantCanvases.length; i++) {\n            /** @type {?} */\n            const correspondingCloneContext = cloneCanvases[i].getContext('2d');\n            if (correspondingCloneContext) {\n                correspondingCloneContext.drawImage(descendantCanvases[i], 0, 0);\n            }\n        }\n    }\n    return clone;\n}\n/**\n * Clamps a value between a minimum and a maximum.\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove an element from the DOM and to do all the necessary null checks.\n * @param {?} element Element to be removed.\n * @return {?}\n */\nfunction removeElement(element) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n/**\n * Determines whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the element into which the drag preview should be inserted.\n * @param {?} documentRef\n * @return {?}\n */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n * @param {?} viewRef\n * @param {?} _document\n * @return {?}\n */\nfunction getRootNode(viewRef, _document) {\n    /** @type {?} */\n    const rootNode = viewRef.rootNodes[0];\n    if (rootNode.nodeType !== _document.ELEMENT_NODE) {\n        /** @type {?} */\n        const wrapper = _document.createElement('div');\n        wrapper.appendChild(rootNode);\n        return wrapper;\n    }\n    return (/** @type {?} */ (rootNode));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Moves an item one index in an array to another.\n * @template T\n * @param {?} array Array in which to move the item.\n * @param {?} fromIndex Starting index of the item.\n * @param {?} toIndex Index to which the item should be moved.\n * @return {?}\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    /** @type {?} */\n    const from = clamp$1(fromIndex, array.length - 1);\n    /** @type {?} */\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    /** @type {?} */\n    const target = array[from];\n    /** @type {?} */\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @template T\n * @param {?} currentArray Array from which to transfer the item.\n * @param {?} targetArray Array into which to put the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n * @return {?}\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @template T\n * @param {?} currentArray Array from which to copy the item.\n * @param {?} targetArray Array into which is copy the item.\n * @param {?} currentIndex Index of the item in its current array.\n * @param {?} targetIndex Index at which to insert the item.\n *\n * @return {?}\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    /** @type {?} */\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/**\n * Clamps a number between zero and a maximum.\n * @param {?} value\n * @param {?} max\n * @return {?}\n */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop refs.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n * @type {?}\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n * @type {?}\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n * \\@docs-private\n * @template T\n */\nclass DropListRef {\n    /**\n     * @param {?} element\n     * @param {?} _dragDropRegistry\n     * @param {?} _document\n     * @param {?=} _ngZone\n     * @param {?=} _viewportRuler\n     */\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /**\n         * Unique ID for the drop list.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 8.0.0\n         */\n        this.id = `cdk-drop-list-ref-${_uniqueIdCounter++}`;\n        /**\n         * Whether starting a dragging sequence from this container is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Whether sorting items within the list is disabled.\n         */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Emits right before dragging has started.\n         */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new Subject();\n        /**\n         * Whether an item in the list is being dragged.\n         */\n        this._isDragging = false;\n        /**\n         * Cache of the dimensions of all the items inside the container.\n         */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the container's scroll position.\n         */\n        this._scrollPosition = { top: 0, left: 0 };\n        /**\n         * Keeps track of the scroll position of the viewport.\n         */\n        this._viewportScrollPosition = { top: 0, left: 0 };\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as\n         * well as what direction the pointer was moving in when the swap occured.\n         */\n        this._previousSwap = { drag: (/** @type {?} */ (null)), delta: 0 };\n        /**\n         * Drop lists that are connected to the current one.\n         */\n        this._siblings = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this._orientation = 'vertical';\n        /**\n         * Connected siblings that currently have a dragged item.\n         */\n        this._activeSiblings = new Set();\n        /**\n         * Layout direction of the drop list.\n         */\n        this._direction = 'ltr';\n        /**\n         * Subscription to the window being scrolled.\n         */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /**\n         * Vertical direction in which the list is currently scrolling.\n         */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /**\n         * Horizontal direction in which the list is currently scrolling.\n         */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /**\n         * Used to signal to the current auto-scroll sequence when to stop.\n         */\n        this._stopScrollTimers = new Subject();\n        /**\n         * Handles the container being scrolled. Has to be an arrow function to preserve the context.\n         */\n        this._handleScroll = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this.isDragging()) {\n                return;\n            }\n            /** @type {?} */\n            const element = coerceElement(this.element);\n            this._updateAfterScroll(this._scrollPosition, element.scrollTop, element.scrollLeft);\n        });\n        /**\n         * Starts the interval that'll auto-scroll the element.\n         */\n        this._startScrollInterval = (/**\n         * @return {?}\n         */\n        () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            }));\n        });\n        /** @type {?} */\n        const nativeNode = this.element = coerceElement(element);\n        this._shadowRoot = getShadowRoot(nativeNode) || _document;\n        _dragDropRegistry.registerDropContainer(this);\n    }\n    /**\n     * Removes the drop list functionality from the DOM element.\n     * @return {?}\n     */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._removeListeners();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = (/** @type {?} */ (null));\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /**\n     * Whether an item from this list is currently being dragged.\n     * @return {?}\n     */\n    isDragging() {\n        return this._isDragging;\n    }\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    start() {\n        /** @type {?} */\n        const element = coerceElement(this.element);\n        this.beforeStarted.next();\n        this._isDragging = true;\n        this._cacheItems();\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._startReceiving(this)));\n        this._removeListeners();\n        // @breaking-change 9.0.0 Remove check for _ngZone once it's marked as a required param.\n        if (this._ngZone) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => element.addEventListener('scroll', this._handleScroll)));\n        }\n        else {\n            element.addEventListener('scroll', this._handleScroll);\n        }\n        // @breaking-change 9.0.0 Remove check for _viewportRuler once it's marked as a required param.\n        if (this._viewportRuler) {\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        /** @type {?} */\n        let newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n        if (newIndex === -1) {\n            // We use the coordinates of where the item entered the drop\n            // zone to figure out at which index it should be inserted.\n            newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n        }\n        /** @type {?} */\n        const activeDraggables = this._activeDraggables;\n        /** @type {?} */\n        const currentIndex = activeDraggables.indexOf(item);\n        /** @type {?} */\n        const placeholder = item.getPlaceholderElement();\n        /** @type {?} */\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            /** @type {?} */\n            const element = newPositionReference.getRootElement();\n            (/** @type {?} */ (element.parentElement)).insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed.\n        this._cacheItemPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * \\@breaking-change 9.0.0 `distance` parameter to become required.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param {?=} distance Distance the user has dragged since the start of the dragging sequence.\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance = { x: 0, y: 0 }) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex: previousContainer.getItemIndex(item),\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} items Items that are a part of this list.\n     * @return {THIS}\n     */\n    withItems(items) {\n        (/** @type {?} */ (this))._draggables = items;\n        items.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item._withDropContainer((/** @type {?} */ (this)))));\n        if ((/** @type {?} */ (this)).isDragging()) {\n            (/** @type {?} */ (this))._cacheItems();\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction of the drop list.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction\n     * @return {THIS}\n     */\n    withDirection(direction) {\n        (/** @type {?} */ (this))._direction = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} connectedTo Other containers that the current containers should be connected to.\n     * @return {THIS}\n     */\n    connectedTo(connectedTo) {\n        (/** @type {?} */ (this))._siblings = connectedTo.slice();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the orientation of the container.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} orientation New orientation for the container.\n     * @return {THIS}\n     */\n    withOrientation(orientation) {\n        (/** @type {?} */ (this))._orientation = orientation;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        /** @type {?} */\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     * @return {?}\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled || !this._isPointerNearDropContainer(pointerX, pointerY)) {\n            return;\n        }\n        /** @type {?} */\n        const siblings = this._itemPositions;\n        /** @type {?} */\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentIndex = findIndex(siblings, (/**\n         * @param {?} currentItem\n         * @return {?}\n         */\n        currentItem => currentItem.drag === item));\n        /** @type {?} */\n        const siblingAtNewPosition = siblings[newIndex];\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const newPosition = siblingAtNewPosition.clientRect;\n        /** @type {?} */\n        const delta = currentIndex > newIndex ? 1 : -1;\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        // How many pixels the item's placeholder should be offset.\n        /** @type {?} */\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        /** @type {?} */\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        /** @type {?} */\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((/**\n         * @param {?} sibling\n         * @param {?} index\n         * @return {?}\n         */\n        (sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            /** @type {?} */\n            const isDraggedItem = sibling.drag === item;\n            /** @type {?} */\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            /** @type {?} */\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        }));\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param {?} pointerX User's pointer position along the x axis.\n     * @param {?} pointerY User's pointer position along the y axis.\n     * @return {?}\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        /** @type {?} */\n        let scrollNode;\n        /** @type {?} */\n        let verticalScrollDirection = 0 /* NONE */;\n        /** @type {?} */\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling the container.\n        if (this._isPointerNearDropContainer(pointerX, pointerY)) {\n            /** @type {?} */\n            const element = coerceElement(this.element);\n            [verticalScrollDirection, horizontalScrollDirection] =\n                getElementScrollDirections(element, this._clientRect, pointerX, pointerY);\n            if (verticalScrollDirection || horizontalScrollDirection) {\n                scrollNode = element;\n            }\n        }\n        // @breaking-change 9.0.0 Remove null check for _viewportRuler once it's a required parameter.\n        // Otherwise check if we can start scrolling the viewport.\n        if (this._viewportRuler && !verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            /** @type {?} */\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                // @breaking-change 9.0.0 Remove null check for `_ngZone` once it is made required.\n                if (this._ngZone) {\n                    this._ngZone.runOutsideAngular(this._startScrollInterval);\n                }\n                else {\n                    this._startScrollInterval();\n                }\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /**\n     * Stops any currently-running auto-scroll sequences.\n     * @return {?}\n     */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /**\n     * Caches the position of the drop list.\n     * @private\n     * @return {?}\n     */\n    _cacheOwnPosition() {\n        /** @type {?} */\n        const element = coerceElement(this.element);\n        this._clientRect = getMutableClientRect(element);\n        this._scrollPosition = { top: element.scrollTop, left: element.scrollLeft };\n    }\n    /**\n     * Refreshes the position cache of the items and sibling containers.\n     * @private\n     * @return {?}\n     */\n    _cacheItemPositions() {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map((/**\n         * @param {?} drag\n         * @return {?}\n         */\n        drag => {\n            /** @type {?} */\n            const elementToMeasure = this._dragDropRegistry.isDragging(drag) ?\n                // If the element is being dragged, we have to measure the\n                // placeholder, because the element is hidden.\n                drag.getPlaceholderElement() :\n                drag.getRootElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        })).sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        }));\n    }\n    /**\n     * Resets the container to its initial state.\n     * @private\n     * @return {?}\n     */\n    _reset() {\n        this._isDragging = false;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item.getRootElement().style.transform = ''));\n        this._siblings.forEach((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._stopReceiving(this)));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._stopScrolling();\n        this._removeListeners();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @private\n     * @param {?} currentIndex Index of the item currently being dragged.\n     * @param {?} siblings All of the items in the list.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        const currentPosition = siblings[currentIndex].clientRect;\n        /** @type {?} */\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        /** @type {?} */\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            /** @type {?} */\n            const start = isHorizontal ? 'left' : 'top';\n            /** @type {?} */\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks whether the pointer coordinates are close to the drop container.\n     * @private\n     * @param {?} pointerX Coordinates along the X axis.\n     * @param {?} pointerY Coordinates along the Y axis.\n     * @return {?}\n     */\n    _isPointerNearDropContainer(pointerX, pointerY) {\n        const { top, right, bottom, left, width, height } = this._clientRect;\n        /** @type {?} */\n        const xThreshold = width * DROP_PROXIMITY_THRESHOLD;\n        /** @type {?} */\n        const yThreshold = height * DROP_PROXIMITY_THRESHOLD;\n        return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n            pointerX > left - xThreshold && pointerX < right + xThreshold;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @private\n     * @param {?} currentPosition Current position of the item.\n     * @param {?} newPosition Position of the item where the current item should be moved.\n     * @param {?} delta Direction in which the user is moving.\n     * @return {?}\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        /** @type {?} */\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @private\n     * @param {?} item Item that is being sorted.\n     * @param {?} pointerX Position of the user's pointer along the X axis.\n     * @param {?} pointerY Position of the user's pointer along the Y axis.\n     * @param {?=} delta Direction in which the user is moving their pointer.\n     * @return {?}\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        /** @type {?} */\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, (/**\n         * @param {?} __0\n         * @param {?} _\n         * @param {?} array\n         * @return {?}\n         */\n        ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                /** @type {?} */\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, and they didn't change\n                // the direction in which they're dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX <= Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY <= Math.floor(clientRect.bottom);\n        }));\n    }\n    /**\n     * Caches the current items in the list and their positions.\n     * @private\n     * @return {?}\n     */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheOwnPosition();\n    }\n    /**\n     * Updates the internal state of the container after a scroll event has happened.\n     * @private\n     * @param {?} scrollPosition Object that is keeping track of the scroll position.\n     * @param {?} newTop New top scroll position.\n     * @param {?} newLeft New left scroll position.\n     * @param {?=} extraClientRect Extra `ClientRect` object that should be updated, in addition to the\n     *  ones of the drag items. Useful when the viewport has been scrolled and we also need to update\n     *  the `ClientRect` of the list.\n     * @return {?}\n     */\n    _updateAfterScroll(scrollPosition, newTop, newLeft, extraClientRect) {\n        /** @type {?} */\n        const topDifference = scrollPosition.top - newTop;\n        /** @type {?} */\n        const leftDifference = scrollPosition.left - newLeft;\n        if (extraClientRect) {\n            adjustClientRect(extraClientRect, topDifference, leftDifference);\n        }\n        // Since we know the amount that the user has scrolled we can shift all of the client rectangles\n        // ourselves. This is cheaper than re-measuring everything and we can avoid inconsistent\n        // behavior where we might be measuring the element before its position has changed.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        }));\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        }));\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n    }\n    /**\n     * Removes the event listeners associated with this drop list.\n     * @private\n     * @return {?}\n     */\n    _removeListeners() {\n        coerceElement(this.element).removeEventListener('scroll', this._handleScroll);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find((/**\n         * @param {?} sibling\n         * @return {?}\n         */\n        sibling => sibling._canReceive(item, x, y)));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param {?} item Item that is being dragged into the list.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _canReceive(item, x, y) {\n        if (!this.enterPredicate(item, this) || !isInsideClientRect(this._clientRect, x, y)) {\n            return false;\n        }\n        /** @type {?} */\n        const elementFromPoint = (/** @type {?} */ (this._shadowRoot.elementFromPoint(x, y)));\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param {?} sibling Sibling in which dragging has started.\n     * @return {?}\n     */\n    _startReceiving(sibling) {\n        /** @type {?} */\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheOwnPosition();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param {?} sibling Sibling whose dragging has stopped.\n     * @return {?}\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     * @private\n     * @return {?}\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.isDragging()) {\n                /** @type {?} */\n                const newPosition = (/** @type {?} */ (this._viewportRuler)).getViewportScrollPosition();\n                this._updateAfterScroll(this._viewportScrollPosition, newPosition.top, newPosition.left, this._clientRect);\n            }\n            else if (this.isReceiving()) {\n                this._cacheOwnPosition();\n            }\n        }));\n    }\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param {?} clientRect `ClientRect` that should be updated.\n * @param {?} top Amount to add to the `top` position.\n * @param {?} left Amount to add to the `left` position.\n * @return {?}\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @template T\n * @param {?} array Array in which to look for matches.\n * @param {?} predicate Function used to determine whether an item is a match.\n * @return {?}\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param {?} clientRect ClientRect that is being checked.\n * @param {?} x Coordinates along the X axis.\n * @param {?} y Coordinates along the Y axis.\n * @return {?}\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Gets a mutable version of an element's bounding `ClientRect`.\n * @param {?} element\n * @return {?}\n */\nfunction getMutableClientRect(element) {\n    /** @type {?} */\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param {?} node Node whose scroll position should change.\n * @param {?} amount Amount of pixels that the `node` should be scrolled.\n * @return {?}\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        ((/** @type {?} */ (node))).scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        ((/** @type {?} */ (node))).scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    /** @type {?} */\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param {?} clientRect Dimensions of the node.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @return {?}\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    /** @type {?} */\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param {?} element Element for which we should calculate the scroll direction.\n * @param {?} clientRect Bounding client rectangle of the element.\n * @param {?} pointerX Position of the user's pointer along the x axis.\n * @param {?} pointerY Position of the user's pointer along the y axis.\n * @return {?}\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    /** @type {?} */\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    /** @type {?} */\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    /** @type {?} */\n    let verticalScrollDirection = 0 /* NONE */;\n    /** @type {?} */\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        /** @type {?} */\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        /** @type {?} */\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n/**\n * Gets the shadow root of an element, if any.\n * @param {?} element\n * @return {?}\n */\nfunction getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        /** @type {?} */\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        if (rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event options that can be used to bind an active, capturing event.\n * @type {?}\n */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * \\@docs-private\n * @template I, C\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /**\n         * Registered drop container instances.\n         */\n        this._dropInstances = new Set();\n        /**\n         * Registered drag item instances.\n         */\n        this._dragInstances = new Set();\n        /**\n         * Drag item instances that are currently being dragged.\n         */\n        this._activeDragInstances = new Set();\n        /**\n         * Keeps track of the event listeners that we've bound to the `document`.\n         */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        });\n        this._document = _document;\n    }\n    /**\n     * Adds a drop container to the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            if (this.getDropContainer(drop.id)) {\n                throw Error(`Drop instance with id \"${drop.id}\" has already been registered.`);\n            }\n            this._dropInstances.add(drop);\n        }\n    }\n    /**\n     * Adds a drag item instance to the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            }));\n        }\n    }\n    /**\n     * Removes a drop container from the registry.\n     * @param {?} drop\n     * @return {?}\n     */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /**\n     * Removes a drag item instance from the registry.\n     * @param {?} drag\n     * @return {?}\n     */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param {?} drag Drag instance which is being dragged.\n     * @param {?} event Event that initiated the dragging.\n     * @return {?}\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            /** @type {?} */\n            const isTouchEvent = event.type.startsWith('touch');\n            /** @type {?} */\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerMove.next((/** @type {?} */ (e)))),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.pointerUp.next((/** @type {?} */ (e)))),\n                options: true\n            })\n                .set('scroll', {\n                handler: (/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => this.scroll.next(e)),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this._globalListeners.forEach((/**\n                 * @param {?} config\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                }));\n            }));\n        }\n    }\n    /**\n     * Stops dragging a drag item instance.\n     * @param {?} drag\n     * @return {?}\n     */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /**\n     * Gets whether a drag item instance is currently being dragged.\n     * @param {?} drag\n     * @return {?}\n     */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    /**\n     * Gets a drop container by its id.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 8.0.0\n     * @param {?} id\n     * @return {?}\n     */\n    getDropContainer(id) {\n        return Array.from(this._dropInstances).find((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => instance.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dragInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDragItem(instance)));\n        this._dropInstances.forEach((/**\n         * @param {?} instance\n         * @return {?}\n         */\n        instance => this.removeDropContainer(instance)));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /**\n     * Clears out the global event listeners from the `document`.\n     * @private\n     * @return {?}\n     */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((/**\n         * @param {?} config\n         * @param {?} name\n         * @return {?}\n         */\n        (config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        }));\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ DragDropRegistry.ngInjectableDef = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default configuration to be used when creating a `DragRef`.\n * @type {?}\n */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    /**\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?} _dragDropRegistry\n     */\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @template T\n     * @param {?} element Element to which to attach the dragging functionality.\n     * @param {?=} config Object used to configure the dragging behavior.\n     * @return {?}\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @template T\n     * @param {?} element Element to which to attach the drop list functionality.\n     * @return {?}\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/** @nocollapse */ DragDrop.ngInjectableDef = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @type {?}\n */\nconst CDK_DROP_LIST = new InjectionToken('CDK_DROP_LIST');\n/**\n * Injection token that is used to provide a CdkDropList instance to CdkDrag.\n * Used for avoiding circular imports.\n * @deprecated Use `CDK_DROP_LIST` instead.\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst CDK_DROP_LIST_CONTAINER = CDK_DROP_LIST;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Handle that can be used to drag and CdkDrag instance.\n */\nclass CdkDragHandle {\n    /**\n     * @param {?} element\n     * @param {?=} parentDrag\n     */\n    constructor(element, parentDrag) {\n        this.element = element;\n        /**\n         * Emits when the state of the handle has changed.\n         */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    /**\n     * Whether starting to drag through this handle is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                }\n            },] },\n];\n/** @nocollapse */\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n * @template T\n */\nclass CdkDragPlaceholder {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.decorators = [\n    { type: Directive, args: [{\n                selector: 'ng-template[cdkDragPlaceholder]'\n            },] },\n];\n/** @nocollapse */\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n * @template T\n */\nclass CdkDragPreview {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPreview.decorators = [\n    { type: Directive, args: [{\n                selector: 'ng-template[cdkDragPreview]'\n            },] },\n];\n/** @nocollapse */\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to configure the behavior of `CdkDrag`.\n * @type {?}\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG', {\n    providedIn: 'root',\n    factory: CDK_DRAG_CONFIG_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction CDK_DRAG_CONFIG_FACTORY() {\n    return { dragStartThreshold: 5, pointerDirectionChangeThreshold: 5 };\n}\n/**\n * Element that can be moved inside a CdkDropList container.\n * @template T\n */\nclass CdkDrag {\n    /**\n     * @param {?} element\n     * @param {?} dropContainer\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} config\n     * @param {?} _dir\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     */\n    constructor(element, dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._destroyed = new Subject();\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /**\n         * Emits when the user starts dragging the item.\n         */\n        this.started = new EventEmitter();\n        /**\n         * Emits when the user has released a drag item, before any animations have started.\n         */\n        this.released = new EventEmitter();\n        /**\n         * Emits when the user stops dragging an item in the container.\n         */\n        this.ended = new EventEmitter();\n        /**\n         * Emits when the user has moved the item into a new container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes the item its container by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits when the user drops the item inside a container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._dragRef.moved.pipe(map((/**\n             * @param {?} movedEvent\n             * @return {?}\n             */\n            movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            })))).subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n            });\n        }));\n        this._dragRef = dragDrop.createDrag(element, config);\n        this._dragRef.data = this;\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Selector that will be used to determine the element to which the draggable's position will\n     * be constrained. Matching starts from the element's parent and goes up the DOM until a matching\n     * element has been found\n     * @deprecated Use `boundaryElement` instead.\n     * \\@breaking-change 9.0.0\n     * @return {?}\n     */\n    get boundaryElementSelector() {\n        return typeof this.boundaryElement === 'string' ? this.boundaryElement : (/** @type {?} */ (undefined));\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    set boundaryElementSelector(selector) {\n        this.boundaryElement = selector;\n    }\n    /**\n     * Whether starting to drag this element is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     * @return {?}\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /**\n     * Returns the root draggable element.\n     * @return {?}\n     */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /**\n     * Resets a standalone drag item to its initial position.\n     * @return {?}\n     */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     * @return {?}\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                /** @type {?} */\n                const childHandleElements = handles\n                    .filter((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle._parentDrag === this))\n                    .map((/**\n                 * @param {?} handle\n                 * @return {?}\n                 */\n                handle => handle.element));\n                this._dragRef.withHandles(childHandleElements);\n            })), \n            // Listen if the state of any of the handles changes.\n            switchMap((/**\n             * @param {?} handles\n             * @return {?}\n             */\n            (handles) => {\n                return merge(...handles.map((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                item => item._stateChanges)));\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} handleInstance\n             * @return {?}\n             */\n            handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                /** @type {?} */\n                const dragRef = this._dragRef;\n                /** @type {?} */\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            }));\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const rootSelectorChange = changes['rootElementSelector'];\n        /** @type {?} */\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /**\n     * Syncs the root element with the `DragRef`.\n     * @private\n     * @return {?}\n     */\n    _updateRootElement() {\n        /** @type {?} */\n        const element = this.element.nativeElement;\n        /** @type {?} */\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /**\n     * Gets the boundary element, based on the `boundaryElement` value.\n     * @private\n     * @return {?}\n     */\n    _getBoundaryElement() {\n        /** @type {?} */\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        /** @type {?} */\n        const element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /**\n     * Syncs the inputs of the CdkDrag with the options of the underlying DragRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!ref.isDragging()) {\n                /** @type {?} */\n                const dir = this._dir;\n                /** @type {?} */\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                /** @type {?} */\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = coerceNumberProperty(this.dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        }));\n    }\n    /**\n     * Handles the events from the underlying `DragRef`.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.started.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.released.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.released.emit({ source: this });\n        }));\n        ref.ended.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        }));\n    }\n}\nCdkDrag.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            },] },\n];\n/** @nocollapse */\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CdkDragHandle, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CdkDragPreview, { static: false },] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CdkDragPlaceholder, { static: false },] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/**\n * Gets the closest ancestor of an element that matches a selector.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction getClosestMatchingAncestor(element, selector) {\n    /** @type {?} */\n    let currentElement = (/** @type {?} */ (element.parentElement));\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            ((/** @type {?} */ (currentElement))).msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n * @template T\n */\nclass CdkDropListGroup {\n    constructor() {\n        /**\n         * Drop lists registered inside the group.\n         */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /**\n     * Whether starting a dragging sequence from inside this group is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup',\n            },] },\n];\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique ids for drop zones.\n * @type {?}\n */\nlet _uniqueIdCounter$1 = 0;\nconst ɵ0 = undefined;\n// @breaking-change 8.0.0 `CdkDropList` implements `CdkDropListContainer` for backwards\n// compatiblity. The implements clause, as well as all the methods that it enforces can\n// be removed when `CdkDropListContainer` is deleted.\n/**\n * Container that wraps a set of draggable items.\n * @template T\n */\nclass CdkDropList {\n    /**\n     * @param {?} element\n     * @param {?} dragDrop\n     * @param {?} _changeDetectorRef\n     * @param {?=} _dir\n     * @param {?=} _group\n     */\n    constructor(element, dragDrop, _changeDetectorRef, _dir, _group) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Direction in which the list is oriented.\n         */\n        this.orientation = 'vertical';\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter$1++}`;\n        this._disabled = false;\n        this._sortingDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = (/**\n         * @return {?}\n         */\n        () => true);\n        /**\n         * Whether to auto-scroll the view when the user moves their pointer close to the edges.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Emits when the user drops an item inside the container.\n         */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /**\n         * Emits as the user is swapping items while actively dragging.\n         */\n        this.sorted = new EventEmitter();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        this._dropListRef.enterPredicate = (/**\n         * @param {?} drag\n         * @param {?} drop\n         * @return {?}\n         */\n        (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        });\n        this._syncInputs(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /**\n     * Whether starting a dragging sequence from this container is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether sorting within this drop list is disabled.\n     * @return {?}\n     */\n    get sortingDisabled() { return this._sortingDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set sortingDisabled(value) {\n        this._sortingDisabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._draggables.changes\n            .pipe(startWith(this._draggables), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._dropListRef.withItems(items.map((/**\n             * @param {?} drag\n             * @return {?}\n             */\n            drag => drag._dragRef)));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Starts dragging an item.\n     * @return {?}\n     */\n    start() {\n        this._dropListRef.start();\n    }\n    /**\n     * Drops an item into this container.\n     * @param {?} item Item being dropped into the container.\n     * @param {?} currentIndex Index at which the item should be inserted.\n     * @param {?} previousContainer Container from which the item got dragged in.\n     * @param {?} isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @return {?}\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer) {\n        this._dropListRef.drop(item._dragRef, currentIndex, ((/** @type {?} */ (previousContainer)))._dropListRef, isPointerOverContainer);\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param {?} item Item that was moved into the container.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @return {?}\n     */\n    enter(item, pointerX, pointerY) {\n        this._dropListRef.enter(item._dragRef, pointerX, pointerY);\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param {?} item Item that was dragged out.\n     * @return {?}\n     */\n    exit(item) {\n        this._dropListRef.exit(item._dragRef);\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param {?} item Item whose index should be determined.\n     * @return {?}\n     */\n    getItemIndex(item) {\n        return this._dropListRef.getItemIndex(item._dragRef);\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param {?} item Item to be sorted.\n     * @param {?} pointerX Position of the item along the X axis.\n     * @param {?} pointerY Position of the item along the Y axis.\n     * @param {?} pointerDelta Direction in which the pointer is moving along each axis.\n     * @return {?}\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        return this._dropListRef._sortItem(item._dragRef, pointerX, pointerY, pointerDelta);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param {?} item Drag item that is being moved.\n     * @param {?} x Position of the item along the X axis.\n     * @param {?} y Position of the item along the Y axis.\n     * @return {?}\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        /** @type {?} */\n        const result = this._dropListRef._getSiblingContainerFromPosition(item._dragRef, x, y);\n        return result ? result.data : null;\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param {?} x Pointer position along the X axis.\n     * @param {?} y Pointer position along the Y axis.\n     * @return {?}\n     */\n    _isOverContainer(x, y) {\n        return this._dropListRef._isOverContainer(x, y);\n    }\n    /**\n     * Syncs the inputs of the CdkDropList with the options of the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _syncInputs(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => ref.withDirection(value)));\n        }\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const siblings = coerceArray(this.connectedTo).map((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => {\n                return typeof drop === 'string' ?\n                    (/** @type {?} */ (CdkDropList._dropLists.find((/**\n                     * @param {?} list\n                     * @return {?}\n                     */\n                    list => list.id === drop)))) : drop;\n            }));\n            if (this._group) {\n                this._group._items.forEach((/**\n                 * @param {?} drop\n                 * @return {?}\n                 */\n                drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                }));\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = this.sortingDisabled;\n            ref.autoScrollDisabled = this.autoScrollDisabled;\n            ref\n                .connectedTo(siblings.filter((/**\n             * @param {?} drop\n             * @return {?}\n             */\n            drop => drop && drop !== this)).map((/**\n             * @param {?} list\n             * @return {?}\n             */\n            list => list._dropListRef)))\n                .withOrientation(this.orientation);\n        }));\n    }\n    /**\n     * Handles events from the underlying DropListRef.\n     * @private\n     * @param {?} ref\n     * @return {?}\n     */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.entered.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        }));\n        ref.exited.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        }));\n        ref.sorted.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        }));\n        ref.dropped.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\n/**\n * Keeps track of the drop lists that are currently on the page.\n */\nCdkDropList._dropLists = [];\nCdkDropList.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CdkDropListGroup, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST_CONTAINER, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                }\n            },] },\n];\n/** @nocollapse */\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: SkipSelf }] }\n];\nCdkDropList.propDecorators = {\n    _draggables: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => CdkDrag)), {\n                    // Explicitly set to false since some of the logic below makes assumptions about it.\n                    // The `.withItems` call below should be updated if we ever need to switch this to `true`.\n                    descendants: false\n                },] }],\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DragDropModule {\n}\nDragDropModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DragDrop, DragRef, DropListRef, CdkDropList, CDK_DROP_LIST, CDK_DROP_LIST_CONTAINER, moveItemInArray, transferArrayItem, copyArrayItem, DragDropModule, DragDropRegistry, CdkDropListGroup, CDK_DRAG_CONFIG_FACTORY, CDK_DRAG_CONFIG, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder, CDK_DRAG_PARENT as ɵb };\n//# sourceMappingURL=drag-drop.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional, PLATFORM_ID, NgModule, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         * We want to use the Angular platform check because if the Document is shimmed\n         * without the navigator, the following checks will fail. This is preferred because\n         * sometimes the Document may be shimmed without the user's knowledge or intention\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        /**\n         * Whether the current browser is Firefox.\n         */\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        /**\n         * Whether the current browser is Safari.\n         */\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.ngInjectableDef = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.decorators = [\n    { type: NgModule, args: [{},] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nlet supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                () => supportsPassiveEvents = true)\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nconst RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\nRtlScrollAxisType[RtlScrollAxisType.NORMAL] = 'NORMAL';\nRtlScrollAxisType[RtlScrollAxisType.NEGATED] = 'NEGATED';\nRtlScrollAxisType[RtlScrollAxisType.INVERTED] = 'INVERTED';\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return RtlScrollAxisType.NORMAL;\n    }\n    if (!rtlScrollAxisType) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nlet shadowDomIsSupported;\n/**\n * Checks whether the user's browser support Shadow DOM.\n * @return {?}\n */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        /** @type {?} */\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (((/** @type {?} */ (head))).createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Platform, PlatformModule, getSupportedInputTypes, supportsPassiveEventListeners, normalizePassiveListenerOptions, supportsScrollBehavior, getRtlScrollAxisType, RtlScrollAxisType, _supportsShadowDom };\n//# sourceMappingURL=platform.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, SkipSelf, ElementRef, NgModule, IterableDiffers, TemplateRef, ViewContainerRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Output, ViewChild, ViewEncapsulation, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, fromEvent, of, Observable, animationFrameScheduler, asapScheduler, merge } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, shareReplay, switchMap } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { ArrayDataSource, isDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef((/**\n                             * @return {?}\n                             */\n                            () => CdkFixedSizeVirtualScroll))],\n                    }],\n            },] },\n];\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ ScrollDispatcher.ngInjectableDef = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: ScrollDispatcher, providedIn: \"root\" });\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nfunction SCROLL_DISPATCHER_PROVIDER_FACTORY(parentDispatcher, ngZone, platform) {\n    return parentDispatcher || new ScrollDispatcher(ngZone, platform);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst SCROLL_DISPATCHER_PROVIDER = {\n    // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n    provide: ScrollDispatcher,\n    deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone, Platform],\n    useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        options.left = options.left == null ? (isRtl ? options.end : options.start) : options.left;\n        options.right = options.right == null ? (isRtl ? options.start : options.end) : options.right;\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            },] },\n];\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return super.measureScrollOffset(from ? from : this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.decorators = [\n    { type: Component, args: [{selector: 'cdk-virtual-scroll-viewport',\n                template: \"<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\"><ng-content></ng-content></div><div class=\\\"cdk-virtual-scroll-spacer\\\" [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\",\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:0}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:0}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\"],\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport,\n                    }]\n            },] },\n];\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        /** @type {?} */\n        const ds = isDataSource(value) ? value :\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            new ArrayDataSource(value instanceof Observable ? value : Array.prototype.slice.call(value || []));\n        this._dataSourceChanges.next(ds);\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            cdkVirtualForOf: this._cdkVirtualForOf,\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]',\n            },] },\n];\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollingModule {\n}\nScrollingModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BidiModule, PlatformModule],\n                exports: [\n                    BidiModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n            },] },\n];\n/**\n * @deprecated ScrollDispatchModule has been renamed to ScrollingModule.\n * \\@breaking-change 8.0.0 delete this alias\n */\nclass ScrollDispatchModule {\n}\nScrollDispatchModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [ScrollingModule],\n                exports: [ScrollingModule],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     */\n    constructor(_platform, ngZone) {\n        this._platform = _platform;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] },\n];\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ ViewportRuler.ngInjectableDef = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: ViewportRuler, providedIn: \"root\" });\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentRuler\n * @param {?} platform\n * @param {?} ngZone\n * @return {?}\n */\nfunction VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler, platform, ngZone) {\n    return parentRuler || new ViewportRuler(platform, ngZone);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst VIEWPORT_RULER_PROVIDER = {\n    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n    provide: ViewportRuler,\n    deps: [[new Optional(), new SkipSelf(), ViewportRuler], Platform, NgZone],\n    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { _fixedSizeVirtualScrollStrategyFactory, FixedSizeVirtualScrollStrategy, CdkFixedSizeVirtualScroll, SCROLL_DISPATCHER_PROVIDER_FACTORY, DEFAULT_SCROLL_TIME, ScrollDispatcher, SCROLL_DISPATCHER_PROVIDER, CdkScrollable, ScrollingModule, ScrollDispatchModule, VIEWPORT_RULER_PROVIDER_FACTORY, DEFAULT_RESIZE_TIME, ViewportRuler, VIEWPORT_RULER_PROVIDER, CdkVirtualForOf, VIRTUAL_SCROLL_STRATEGY, CdkVirtualScrollViewport };\n//# sourceMappingURL=scrolling.js.map\n","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button style=\\\"color: #F09D2E;\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title color=\\\"Medium\\\"> Actions</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n          <ion-button (click)=\\\"searchAction()\\\" style=\\\"color: #F09D2E;\\\">\\r\\n              <ion-icon style=\\\"color: #f09d2e;\\\" name=\\\"search\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n          <!-- <ion-button style=\\\"color: #F09D2E;\\\">\\r\\n              <ion-icon name=\\\"funnel\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n          <ion-button style=\\\"color: #F09D2E;\\\">\\r\\n              <ion-icon name=\\\"ellipsis-vertical\\\"></ion-icon>\\r\\n          </ion-button> -->\\r\\n      </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"\\\">\\r\\n\\r\\n  <ion-searchbar *ngIf=\\\"showSearchbar == true\\\" [(ngModel)]=\\\"terms\\\" mode='ios' (ionCancel)=\\\"hideSearchbar($event)\\\" showCancelButton></ion-searchbar>\\r\\n\\r\\n\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n\\r\\n  \\r\\n  <ion-fab vertical=\\\"bottom\\\" slot=\\\"fixed\\\" style=\\\"width: 100%;flex-direction: row; justify-content: center;\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <ion-segment class=\\\"segment-button\\\" [(ngModel)]=\\\"segment\\\"  (ionChange)=\\\"segmentChanged($event)\\\">\\r\\n          <ion-segment-button value=\\\"find\\\">\\r\\n            Find\\r\\n          </ion-segment-button>\\r\\n          <ion-segment-button value=\\\"sort\\\">\\r\\n            Sort\\r\\n          </ion-segment-button>\\r\\n          <ion-segment-button value=\\\"do\\\">\\r\\n            Do\\r\\n          </ion-segment-button>\\r\\n        </ion-segment>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n        <div class=\\\"ion-text-center\\\">\\r\\n          <ion-fab-button (click)=\\\"openModal('create','')\\\" style=\\\"float:right; margin-top: 5px;\\\">\\r\\n            <ion-icon name=\\\"add\\\" style=\\\"border: 2px solid white;border-radius: 50%;\\\"></ion-icon>\\r\\n          </ion-fab-button>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-fab>\\r\\n    <div [ngSwitch]=\\\"segment\\\" cdkDropListGroup>\\r\\n      <div class=\\\"scrolling-wrapper-flexbox\\\" *ngSwitchCase=\\\"'find'\\\">\\r\\n        <!-- First Block -->\\r\\n        <div class=\\\"card\\\" style=\\\"width:75%; margin-right:5px\\\">\\r\\n          <ion-card style=\\\"border: none; box-shadow: none;\\\">\\r\\n            <!-- <ion-card-header   style=\\\"background-color: white; padding:5px; border-bottom: lightgray 1px solid;\\\">\\r\\n              <ion-grid style=\\\"padding:0px\\\">\\r\\n                <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                  <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                    <span style=\\\"float:left; font-size: large; padding:4px; margin-top:2px; color:black;font-weight:bold \\\" >Find</span>  <span style=\\\" padding-top: 5px;text-align:center;vertical-align: middle; color:black; font-size: large; float:right;width:30px;height:30px;border-radius:30px;border:lightgray 1px solid\\\"> {{dumpActions.length<10 ? '0'+dumpActions.length : dumpActions.length }}</span>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-card-header> -->\\r\\n            <ion-card-content>\\r\\n              <!-- <div style=\\\"text-align:center; margin-left:5px; margin-right:5px; padding: 5px; border:lightgray 1px solid; margin-top:10px; margin-bottom:10px; background-color: rgba(211, 211, 211, 0.329);\\\"  (click)=\\\"openModal('create','')\\\">Add a quick action</div> -->\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"10\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"default-input\\\" placeholder=\\\"Add action\\\" [(ngModel)]='quickActionName'>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                  <i class=\\\"fa fa-plus\\\" style=\\\"color: #f18a11;\\\" (click)=\\\"triggerQUickAction($event)\\\"></i>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n              <div\\r\\n                cdkDropList\\r\\n                id = 'moviesList'\\r\\n                [cdkDropListData]=\\\"dumpActions\\\"\\r\\n                [cdkDropListConnectedTo]=\\\"catogeryNames\\\"\\r\\n                class=\\\"example-list\\\"\\r\\n                (cdkDropListDropped)=\\\"onDropFind($event)\\\">\\r\\n                <ion-card  (click)=\\\"openModal('find',item)\\\" style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\" *ngFor=\\\"let item of dumpActions | userExtract: terms;\\\" cdkDrag>\\r\\n                  <ion-card-header>\\r\\n                    <ion-grid style=\\\"padding:0px\\\">\\r\\n                      <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                        <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                          <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-find\\\"></i>{{item.action}}</span>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n                    </ion-grid>\\r\\n                  </ion-card-header>\\r\\n                </ion-card>\\r\\n  \\r\\n                <!-- <ion-row *ngIf=\\\"dumpActions.length == 0\\\">\\r\\n                  <ion-col>\\r\\n                    <div style=\\\"text-align: center;\\\">\\r\\n                        No Actions\\r\\n                    </div>\\r\\n                  </ion-col>\\r\\n                </ion-row> -->\\r\\n              </div>\\r\\n              \\r\\n  \\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n\\r\\n          <ion-row *ngIf=\\\"dumpActions.length == 0\\\">\\r\\n            <ion-col>\\r\\n              <div style=\\\"text-align: center;\\\">\\r\\n                  <img src=\\\"assets/img/action-rings.png\\\" alt=\\\"\\\" style=\\\"height: 200px;\\\">\\r\\n              </div>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </div>\\r\\n        <!-- Second Block -->\\r\\n        <div class=\\\"card\\\" style=\\\"width:80%; margin-right:5px\\\">\\r\\n          <ion-card style=\\\"border: none; box-shadow: none;\\\">\\r\\n            <!-- <ion-card-header   style=\\\"background-color: white; padding:5px; border-bottom: lightgray 1px solid;\\\">\\r\\n              <ion-grid style=\\\"padding:0px\\\">\\r\\n                <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                  <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                    <span style=\\\"float:left; font-size: large; padding:4px; margin-top:2px; color:black;font-weight: bold; \\\" >Sort</span>  <span style=\\\"padding-top: 5px; color:black; font-size: larger; float:right;width:30px;height:30px;border-radius:30px;border:lightgray 1px solid\\\"> {{chunkTotalcount}}</span>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-card-header> -->\\r\\n  \\r\\n            <ion-row *ngIf=\\\"displayIfNoCategories\\\">\\r\\n              <ion-col>\\r\\n                <div style=\\\"text-align: center;\\\">\\r\\n                    No Categories\\r\\n                </div>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n              \\r\\n            <ion-card *ngFor=\\\"let data of chunkActions;let i = index\\\" [ngStyle]=\\\"{'border-color': data.color}\\\">\\r\\n                <ion-card-header (click)=\\\"data.visible = !data.visible;clickedheader(i, 'find')\\\">\\r\\n                  <ion-grid style=\\\"padding:0px\\\">\\r\\n                    <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                      <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:0px\\\">\\r\\n                        <span style=\\\"float:left; font-size: 20px; color: #363648; padding:4px; margin-top:2px;\\\" >{{data.name}}</span>\\r\\n                        <!-- <span style=\\\"text-align:center;vertical-align: middle; color:white; font-size: large; float:right;\\\">\\r\\n                          <span style=\\\"padding:5px\\\">{{data.actions.length}}</span>\\r\\n                        </span> -->\\r\\n  \\r\\n                        <!-- <span *ngIf=\\\"deviceType=='ios'\\\" class=\\\"roundbutton\\\" style=\\\"text-align:center;vertical-align: middle; color:red; padding-top:3px !important; font-size:small; float:right;\\\">\\r\\n                          <span style=\\\"margin-top: 5px;\\\">{{data.actions.length}}</span>\\r\\n                        </span> -->\\r\\n  \\r\\n                        <!-- <span  *ngIf=\\\"deviceType=='android'\\\" class=\\\"roundbutton\\\" style=\\\"text-align:center;vertical-align: middle; color:red; padding-top:3px !important; font-size:small; float:right;\\\">\\r\\n                          <span style=\\\"margin-top: 5px; line-height: 1.7;\\\">{{data.actions.length}}</span>\\r\\n                        </span> -->\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                  </ion-grid>\\r\\n                </ion-card-header>\\r\\n                <ion-card-content *ngIf=\\\"data.visible\\\" >\\r\\n  \\r\\n                  <div\\r\\n                    cdkDropList\\r\\n                    id = \\\"{{data.name}}\\\"\\r\\n                    [cdkDropListData]=\\\"data.actions\\\"\\r\\n                    [cdkDropListConnectedTo]=\\\"['moviesList']\\\"\\r\\n                    class=\\\"movie-list\\\"\\r\\n                    class=\\\"example-list\\\"\\r\\n                    (cdkDropListDropped)=\\\"onDrop($event)\\\">\\r\\n                    <div   class=\\\"card\\\" style=\\\"margin: 0px;border: none;\\\" cdkDrag>\\r\\n                      <div  *cdkDragPlaceholder style=\\\"border: none;\\\"></div>\\r\\n                    </div>\\r\\n                    <!-- <ion-card >\\r\\n                      <ion-card-header (click)=\\\"openModal('sortplus',data)\\\">\\r\\n                        <ion-grid style=\\\"padding:0px\\\" >\\r\\n                          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                            <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                              <span style=\\\"float:left; padding-left:4px; padding-top:4px\\\" >Add Quick Action</span>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                      </ion-card-header>\\r\\n                    </ion-card> -->\\r\\n                    <ion-row>\\r\\n                      <ion-col size=\\\"10\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"default-input\\\" placeholder=\\\"Add action\\\" [ngStyle]=\\\"{'border-color': data.color}\\\">\\r\\n                      </ion-col>\\r\\n                      <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                        <i class=\\\"fa fa-plus\\\" [ngStyle]=\\\"{'color': data.color}\\\" (click)=\\\"openModal('sortplus',data)\\\"></i>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n  \\r\\n                    <div   class=\\\"card\\\" style=\\\"margin: 0px;border: none;\\\" cdkDrag>\\r\\n                      <div  *cdkDragPlaceholder style=\\\"border: none;\\\"></div>\\r\\n                    </div>\\r\\n                    <!-- <div class=\\\"example-box\\\" *ngFor=\\\"let item of todo\\\" cdkDrag>{{item}}</div> -->\\r\\n                    <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\" *ngFor=\\\"let data2 of data.actions | userExtract: terms;\\\" (click)=\\\"openModal('edit',data2)\\\" cdkDrag>\\r\\n                    <!-- <ion-card style=\\\"flex-direction: row;cursor: move;\\\" *ngFor=\\\"let data2 of data.actions | userExtract: searchBy ;\\\" (click)=\\\"openModal('edit',data2)\\\" cdkDrag> -->\\r\\n                      <ion-card-header>\\r\\n                        <ion-grid style=\\\"padding:0px\\\">\\r\\n                          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                            <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                              <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" [ngStyle]=\\\"{'border-color':data.color}\\\"></i>{{data2.action}}</span>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                      </ion-card-header>\\r\\n                    </ion-card>\\r\\n                  </div>\\r\\n                </ion-card-content>\\r\\n              </ion-card>\\r\\n          </ion-card>\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n      <div class=\\\"scrolling-wrapper-flexbox\\\" *ngSwitchCase=\\\"'sort'\\\">\\r\\n        <!-- Second Block -->\\r\\n        <div class=\\\"card\\\" style=\\\"width:70%; margin-right:5px\\\" >\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <span style=\\\"font-size: 14px; float:right; color: #f78f11; margin-top: 10px;\\\" (click)=\\\"collapse_all = !collapse_all\\\">Collapse all</span>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-card style=\\\"border: none; box-shadow: none;\\\">\\r\\n            <!-- <ion-card-header   style=\\\"background-color: white; padding:5px; border-bottom: lightgray 1px solid;\\\">\\r\\n              <ion-grid style=\\\"padding:0px\\\">\\r\\n                <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                  <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                    <span style=\\\"float:left; font-size: large; padding:4px; margin-top:2px; color:black;font-weight: bold; \\\" >Sort</span>  <span style=\\\"padding-top: 5px; color:black; font-size: larger; float:right;width:30px;height:30px;border-radius:30px;border:lightgray 1px solid\\\"> {{chunkTotalcount}}</span>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-card-header> -->\\r\\n  \\r\\n            <ion-row *ngIf=\\\"displayIfNoCategories\\\">\\r\\n              <ion-col>\\r\\n                <div style=\\\"text-align: center;\\\">\\r\\n                    No Categories\\r\\n                </div>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n              \\r\\n            <ion-card *ngFor=\\\"let data of chunkActions;let i = index\\\" [ngStyle]=\\\"{'border-color': data.color}\\\">\\r\\n                <ion-card-header (click)=\\\"data.sortvisible = !data.sortvisible;clickedheader(i, 'sort')\\\">\\r\\n                  <ion-grid style=\\\"padding:0px\\\">\\r\\n                    <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                      <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:0px\\\">\\r\\n                        <span style=\\\"float:left; font-size: 20px; color: #363648; padding:4px; margin-top:2px;\\\" >{{data.name}}</span>\\r\\n                        <!-- <span style=\\\"text-align:center;vertical-align: middle; color:white; font-size: large; float:right;\\\">\\r\\n                          <span style=\\\"padding:5px\\\">{{data.actions.length}}</span>\\r\\n                        </span> -->\\r\\n  \\r\\n                        <!-- <span *ngIf=\\\"deviceType=='ios'\\\" class=\\\"roundbutton\\\" style=\\\"text-align:center;vertical-align: middle; color:red; padding-top:3px !important; font-size:small; float:right;\\\">\\r\\n                          <span style=\\\"margin-top: 5px;\\\">{{data.actions.length}}</span>\\r\\n                        </span> -->\\r\\n  \\r\\n                        <!-- <span  *ngIf=\\\"deviceType=='android'\\\" class=\\\"roundbutton\\\" style=\\\"text-align:center;vertical-align: middle; color:red; padding-top:3px !important; font-size:small; float:right;\\\">\\r\\n                          <span style=\\\"margin-top: 5px; line-height: 1.7;\\\">{{data.actions.length}}</span>\\r\\n                        </span> -->\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                  </ion-grid>\\r\\n                </ion-card-header>\\r\\n                <div *ngIf=\\\"collapse_all\\\">\\r\\n                  <ion-card-content *ngIf=\\\"data.sortvisible\\\" >\\r\\n                    <div\\r\\n                      cdkDropList\\r\\n                      id = \\\"{{data.name}}\\\"\\r\\n                      [cdkDropListData]=\\\"data.actions\\\"\\r\\n                      [cdkDropListConnectedTo]=\\\"['moviesList']\\\"\\r\\n                      class=\\\"movie-list\\\"\\r\\n                      class=\\\"example-list\\\"\\r\\n                      (cdkDropListDropped)=\\\"onDrop($event)\\\">\\r\\n                      <div   class=\\\"card\\\" style=\\\"margin: 0px;border: none;\\\" cdkDrag>\\r\\n                        <div  *cdkDragPlaceholder style=\\\"border: none;\\\"></div>\\r\\n                      </div>\\r\\n                      <!-- <ion-card >\\r\\n                        <ion-card-header (click)=\\\"openModal('sortplus',data)\\\">\\r\\n                          <ion-grid style=\\\"padding:0px\\\" >\\r\\n                            <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                              <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                                <span style=\\\"float:left; padding-left:4px; padding-top:4px\\\" >Add Quick Action</span>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </ion-card-header>\\r\\n                      </ion-card> -->\\r\\n                      <ion-row>\\r\\n                        <ion-col size=\\\"10\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"default-input\\\" placeholder=\\\"Add action\\\" [ngStyle]=\\\"{'border-color': data.color}\\\">\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                          <i class=\\\"fa fa-plus\\\" [ngStyle]=\\\"{'color': data.color}\\\" (click)=\\\"openModal('sortplus',data)\\\"></i>\\r\\n                        </ion-col>\\r\\n                      </ion-row>\\r\\n    \\r\\n                      <div   class=\\\"card\\\" style=\\\"margin: 0px;border: none;\\\" cdkDrag>\\r\\n                        <div  *cdkDragPlaceholder style=\\\"border: none;\\\"></div>\\r\\n                      </div>\\r\\n                      <!-- <div class=\\\"example-box\\\" *ngFor=\\\"let item of todo\\\" cdkDrag>{{item}}</div> -->\\r\\n                      <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\" *ngFor=\\\"let data2 of data.actions | userExtract: terms;\\\" (click)=\\\"openModal('edit',data2)\\\" [cdkDragData]=\\\"data2\\\" cdkDrag>\\r\\n                      <!-- <ion-card style=\\\"flex-direction: row;cursor: move;\\\" *ngFor=\\\"let data2 of data.actions | userExtract: searchBy ;\\\" (click)=\\\"openModal('edit',data2)\\\" cdkDrag> -->\\r\\n                        <ion-card-header>\\r\\n                          <ion-grid style=\\\"padding:0px\\\">\\r\\n                            <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                              <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                                <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" [ngStyle]=\\\"{'border-color':data.color}\\\"></i>{{data2.action}}</span>\\r\\n                              </ion-col>\\r\\n                            </ion-row>\\r\\n                          </ion-grid>\\r\\n                        </ion-card-header>\\r\\n                      </ion-card>\\r\\n                    </div>\\r\\n                  </ion-card-content>\\r\\n                </div>\\r\\n              </ion-card>\\r\\n          </ion-card>\\r\\n        </div>\\r\\n        <!-- Third Block -->\\r\\n        <div class=\\\"card\\\" style=\\\"width:80%; margin-right:5px\\\">\\r\\n          <div style=\\\"border: none; box-shadow: none;\\\">\\r\\n            <ion-card *ngFor=\\\"let day of days\\\">\\r\\n              <ion-card-header>\\r\\n                <ion-grid style=\\\"padding:0px\\\">\\r\\n                  <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                    <ion-col size=\\\"12\\\" style=\\\"padding:0px\\\">\\r\\n                      <span style=\\\"float:left; font-size: 20px; color: #363648; padding:4px; margin-top:2px;\\\" >{{ day.displayDate }}</span>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-align-self-center\\\" size=\\\"12\\\" style=\\\"padding:0px\\\">\\r\\n                      \\r\\n                    \\r\\n                    <div  cdkDropList\\r\\n                        id=\\\"chooseDate\\\"       \\r\\n                        [cdkDropListData]=\\\"day.actions\\\"\\r\\n                        (cdkDropListDropped)=\\\"onDropDate($event,day.formatDate)\\\"\\r\\n                        class=\\\"movie-list example-list\\\" style=\\\"min-height: 0px;\\\">\\r\\n                        <div   class=\\\"card\\\" style=\\\"margin: 0px;border: none; height: 20px;\\\" cdkDrag>\\r\\n                          <div  *cdkDragPlaceholder style=\\\"border: none;\\\"></div>\\r\\n                        </div>\\r\\n                        <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\" *ngFor=\\\"let data of day.actions\\\" cdkDrag>\\r\\n                          <ion-card-header>\\r\\n                            <ion-grid style=\\\"padding:0px; height: 20px;\\\">\\r\\n                              <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                                <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px; height: 20px;\\\">\\r\\n                                  <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" [ngStyle]=\\\"{'border-color':data.color}\\\"></i>{{data.action}}</span>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n                          </ion-card-header>\\r\\n                        </ion-card>\\r\\n                    </div>\\r\\n                  </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n              </ion-card-header>\\r\\n            </ion-card>\\r\\n            <ion-card *ngFor=\\\"let day2 of anotherdate\\\">\\r\\n              <ion-card-header>\\r\\n                <ion-grid style=\\\"padding:0px\\\">\\r\\n                  <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                    <ion-col size=\\\"12\\\" style=\\\"padding:0px\\\">\\r\\n                      <span style=\\\"float:left; font-size: 20px; color: #363648; padding:4px; margin-top:2px;\\\" >{{ day2.displayDate1 }}</span>\\r\\n                    </ion-col>\\r\\n                    <ion-col class=\\\"ion-align-self-center\\\" size=\\\"12\\\" style=\\\"padding:0px\\\">\\r\\n                    <div  cdkDropList\\r\\n                        id=\\\"chooseDate\\\"       \\r\\n                        [cdkDropListData]=\\\"day2.actions\\\"\\r\\n                        (cdkDropListDropped)=\\\"anotherDate($event,day2.formatDate)\\\"\\r\\n                        class=\\\"movie-list example-list\\\" style=\\\"min-height: 0px;\\\">\\r\\n                        <div   class=\\\"card\\\" style=\\\"margin: 0px;border: none; height: 20px;\\\" cdkDrag>\\r\\n                          <div  *cdkDragPlaceholder style=\\\"border: none;\\\"></div>\\r\\n                        </div>\\r\\n                        <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\" *ngFor=\\\"let data of day2.actions\\\" cdkDrag>\\r\\n                          <ion-card-header>\\r\\n                            <ion-grid style=\\\"padding:0px; height: 20px;\\\">\\r\\n                              <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                                <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px; height: 20px;\\\">\\r\\n                                  <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" [ngStyle]=\\\"{'border-color':data.color}\\\"></i>{{data.action}}</span>\\r\\n                                </ion-col>\\r\\n                              </ion-row>\\r\\n                            </ion-grid>\\r\\n                          </ion-card-header>\\r\\n                        </ion-card>\\r\\n                    </div>\\r\\n                  </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n              </ion-card-header>\\r\\n            </ion-card>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngSwitchCase=\\\"'do'\\\">\\r\\n        <!-- Third Block -->\\r\\n        <div class=\\\"card\\\" style=\\\"width:100%; margin-right:5px\\\">\\r\\n          <ion-card style=\\\"border: none; box-shadow: none;\\\">\\r\\n            <ion-card-header   style=\\\"background-color: white; padding:5px;\\\">\\r\\n              <ion-grid style=\\\"padding:0px\\\">\\r\\n                <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                  <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:0px\\\">\\r\\n                    <span *ngIf=\\\"dodate\\\" style=\\\"float:left; font-size: large; padding:4px; margin-top:2px; color: #104a84;font-weight: bold; \\\" >Do Today</span>  \\r\\n                    <span  *ngIf=\\\"duedate\\\" style=\\\"float:left; font-size: large; padding:4px; margin-top:2px; color: #104a84;font-weight: bold; \\\" >Due Date</span>  \\r\\n                    <!-- <span style=\\\"padding-top: 5px; color:black; font-size: large; float:right;width:30px;height:30px;border-radius:30px;border:lightgray 1px solid\\\">{{doActions.length<10 ? '0'+doActions.length : doActions.length }}</span> -->\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-card-header>\\r\\n            <ion-card-header>\\r\\n              <ion-grid style=\\\"text-align: center;\\\">\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <ion-note\\r\\n                      (click)=\\\"click_Do()\\\"\\r\\n                      [ngStyle]=\\\"{'font-weight':isDoEnb, 'color':isDoActive}\\\"\\r\\n                      >Do Date</ion-note\\r\\n                    >\\r\\n                  </ion-col>\\r\\n                  <ion-col>\\r\\n                    <ion-note (click)=\\\"click_Due()\\\" [ngStyle]=\\\"{'font-weight':isDueEnb, 'color':isDuActive}\\\"\\r\\n                      >Due Date</ion-note\\r\\n                    >\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-card-header>\\r\\n            \\r\\n            <div *ngIf=\\\"isDo\\\">\\r\\n              <ion-card-content>\\r\\n                <mbsc-form-group>\\r\\n                  <mbsc-calendar [(ngModel)]=\\\"markedDay\\\" display=\\\"inline\\\" (onSet)=\\\"getDetailsofClick($event)\\\" [marked]=\\\"markedDays\\\"></mbsc-calendar>\\r\\n                </mbsc-form-group>\\r\\n                <div>\\r\\n                  <ion-row>\\r\\n                    <ion-col size=\\\"10\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"default-input\\\" [(ngModel)]=\\\"actions.action\\\" placeholder=\\\"Add action\\\">\\r\\n                    </ion-col>\\r\\n                    <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\r\\n                      <i class=\\\"fa fa-plus\\\" style=\\\"color: #f18a11;\\\" (click)=\\\"openModal('create','')\\\"></i>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                    <ion-card-header>\\r\\n                      <ion-grid style=\\\"padding:0px\\\">\\r\\n                        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                          <ion-col class=\\\"ion-align-self-center\\\" size=\\\"12\\\">\\r\\n                            <span style=\\\"float:left; color: #363648;\\\" ><i class=\\\"fa fa-check check-icon\\\" style=\\\"color: #af5db7;\\\"></i>Cycle 20 miles</span>\\r\\n                          </ion-col>\\r\\n                        </ion-row>\\r\\n                      </ion-grid>\\r\\n                    </ion-card-header>\\r\\n                  </ion-card>   \\r\\n                  <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                    <ion-card-header>\\r\\n                      <ion-grid style=\\\"padding:0px\\\">\\r\\n                        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                          <ion-col class=\\\"ion-align-self-center\\\" size=\\\"12\\\" style=\\\"padding:4px\\\">\\r\\n                            <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" style=\\\"color: #bee25f;\\\"></i>Take Cosmo for a walk</span>\\r\\n                          </ion-col>\\r\\n                        </ion-row>\\r\\n                      </ion-grid>\\r\\n                    </ion-card-header>\\r\\n                  </ion-card>   \\r\\n                  <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                    <ion-card-header>\\r\\n                      <ion-grid style=\\\"padding:0px\\\">\\r\\n                        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                          <ion-col class=\\\"ion-align-self-center\\\" size=\\\"12\\\" style=\\\"padding:4px\\\">\\r\\n                            <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" style=\\\"color: #bee25f;\\\"></i>Take Cosmo for a walk</span>\\r\\n                          </ion-col>\\r\\n                        </ion-row>\\r\\n                      </ion-grid>\\r\\n                    </ion-card-header>\\r\\n                  </ion-card>   \\r\\n                  <ion-card *ngFor=\\\"let item2 of todayActionList | userExtract: terms;\\\" (click)=\\\"openModal('edit',item2)\\\"  style=\\\"font-weight: normal; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                    <ion-card-header>\\r\\n                      <ion-grid style=\\\"padding:0px\\\">\\r\\n                        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                          <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                            <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\"><i class=\\\"icon-sort\\\" [ngStyle]=\\\"{'border-color':item2.color}\\\"></i>{{item2.action}}</span>\\r\\n                          </ion-col>\\r\\n                        </ion-row>\\r\\n                      </ion-grid>\\r\\n                    </ion-card-header>\\r\\n                  </ion-card>\\r\\n                  <div style=\\\"height: 80px;\\\"></div>\\r\\n                </div>\\r\\n              </ion-card-content>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"isDue\\\">\\r\\n              <ion-card style=\\\"margin-bottom: 5px !important; border: none; box-shadow: none;\\\">\\r\\n                <ion-card-header class=\\\"ion-no-padding\\\" (click)=\\\"visible = !visible\\\" style=\\\"padding:0px !important\\\">\\r\\n                  <ion-item lines=\\\"none\\\">\\r\\n                    <ion-label style=\\\"color:#f83a3a !important;margin: 0px !important; font-size: 20px; font-weight: bold;\\\">Overdue</ion-label>\\r\\n                    <span class=\\\"roundbutton\\\" style=\\\"text-align:center;vertical-align: middle; color:red; padding-top:3px !important; font-size:small; float:right;\\\">\\r\\n                      <span style=\\\"margin-top: 5px;\\\"><i class=\\\"fa fa-angle-down\\\" style=\\\"color: #f83a3a;\\\"></i></span>\\r\\n                    </span>\\r\\n                  </ion-item>\\r\\n                </ion-card-header>\\r\\n                <ion-card-content *ngIf=\\\"visible\\\" class=\\\"ion-padding-top\\\">\\r\\n                  <ion-grid>\\r\\n                    <!-- <ion-row *ngIf=\\\"overdueActionList.length == 0\\\">\\r\\n                      <ion-col>\\r\\n                        <div style=\\\"text-align: center;\\\">\\r\\n                            No Actions\\r\\n                        </div>\\r\\n                      </ion-col>\\r\\n                    </ion-row> -->\\r\\n                    <ion-card *ngFor=\\\"let item1 of overdueActionList | userExtract: terms;\\\" (click)=\\\"openModal('edit',item1)\\\"  style=\\\"font-weight: normal; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                      <!-- <ion-col size=\\\"1\\\">\\r\\n                        <ion-text color=\\\"light\\\" [style.background-color]=\\\"item1.color\\\">{{item1.category_name | slice:0:1}}</ion-text>\\r\\n                      </ion-col>\\r\\n                      <ion-col size=\\\"3\\\">{{item1.target_date ? (item1.target_date | date: 'd MMM') : ''}}</ion-col>\\r\\n                      <ion-col size=\\\"1\\\">{{item1.priority_name | slice:0:1}}</ion-col>\\r\\n                      <ion-col size=\\\"6\\\">{{item1.action | slice:0:15}}</ion-col> -->\\r\\n                      <ion-card-header>\\r\\n                        <ion-grid style=\\\"padding:0px\\\">\\r\\n                          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                            <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                              <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" [ngStyle]=\\\"{'border-color':item1.color}\\\"></i>{{item1.action}}</span>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                      </ion-card-header>\\r\\n                    </ion-card>\\r\\n                    <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                      <ion-card-header>\\r\\n                        <ion-grid style=\\\"padding:0px\\\">\\r\\n                          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                            <ion-col class=\\\"ion-align-self-center\\\" size=\\\"12\\\" style=\\\"padding:4px\\\">\\r\\n                              <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" style=\\\"color: #bee25f;\\\"></i>Take Cosmo for a walk</span>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                      </ion-card-header>\\r\\n                    </ion-card>   \\r\\n                    <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                      <ion-card-header>\\r\\n                        <ion-grid style=\\\"padding:0px\\\">\\r\\n                          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                            <ion-col class=\\\"ion-align-self-center\\\" size=\\\"12\\\" style=\\\"padding:4px\\\">\\r\\n                              <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" style=\\\"color: #bee25f;\\\"></i>Take Cosmo for a walk</span>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                      </ion-card-header>\\r\\n                    </ion-card>   \\r\\n                  </ion-grid>\\r\\n                </ion-card-content>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card style=\\\"margin-bottom: 5px !important; border: none; box-shadow: none;\\\">\\r\\n                <ion-card-header class=\\\"ion-no-padding\\\" (click)=\\\"visible2 = !visible2\\\" style=\\\"padding:0px !important\\\">\\r\\n                  <ion-item lines=\\\"none\\\">\\r\\n                    <ion-label style=\\\"color:#464644 !important;margin: 0px !important; font-weight: bold;\\\"> Due</ion-label>\\r\\n                  </ion-item>\\r\\n                </ion-card-header>\\r\\n                <ion-card-content class=\\\"ion-padding-top\\\">\\r\\n                  <ion-grid>\\r\\n                    <!-- <ion-row *ngIf=\\\"todayActionList.length == 0\\\">\\r\\n                      <ion-col>\\r\\n                        <div style=\\\"text-align: center;\\\">\\r\\n                            No Actions\\r\\n                        </div>\\r\\n                      </ion-col>\\r\\n                    </ion-row> -->\\r\\n                    <ion-card *ngFor=\\\"let item2 of todayActionList | userExtract: terms;\\\" (click)=\\\"openModal('edit',item2)\\\"  style=\\\"font-weight: normal; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                      <ion-card-header>\\r\\n                        <ion-grid style=\\\"padding:0px\\\">\\r\\n                          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                            <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                              <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\"><i class=\\\"icon-sort\\\" [ngStyle]=\\\"{'border-color':item2.color}\\\"></i>{{item2.action}}</span>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                      </ion-card-header>\\r\\n                    </ion-card>\\r\\n                    <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                      <ion-card-header>\\r\\n                        <ion-grid style=\\\"padding:0px\\\">\\r\\n                          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                            <ion-col class=\\\"ion-align-self-center\\\" size=\\\"12\\\" style=\\\"padding:4px\\\">\\r\\n                              <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" style=\\\"color: #bee25f;\\\"></i>Take Cosmo for a walk</span>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                      </ion-card-header>\\r\\n                    </ion-card> \\r\\n                    <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                      <ion-card-header>\\r\\n                        <ion-grid style=\\\"padding:0px\\\">\\r\\n                          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                            <ion-col class=\\\"ion-align-self-center\\\" size=\\\"12\\\" style=\\\"padding:4px\\\">\\r\\n                              <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" style=\\\"color: #af5db7;\\\"></i>Pay Tax</span>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                      </ion-card-header>\\r\\n                    </ion-card>\\r\\n                    <ion-card style=\\\"flex-direction: row;cursor: move; height: 60px; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                      <ion-card-header>\\r\\n                        <ion-grid style=\\\"padding:0px\\\">\\r\\n                          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                            <ion-col class=\\\"ion-align-self-center\\\" size=\\\"12\\\" style=\\\"padding:4px\\\">\\r\\n                              <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\" ><i class=\\\"icon-sort\\\" style=\\\"color: greenyellow;\\\"></i>Run 10 miles</span>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                      </ion-card-header>\\r\\n                    </ion-card>  \\r\\n                  </ion-grid>\\r\\n                </ion-card-content>\\r\\n              </ion-card>\\r\\n              <ion-card style=\\\"border: none; box-shadow: none;\\\">\\r\\n                <ion-card-header class=\\\"ion-no-padding\\\" style=\\\"padding:0px !important\\\">\\r\\n                  <ion-item lines=\\\"none\\\">\\r\\n                    <ion-label style=\\\"color:#464644 !important;margin: 0px !important; font-weight: bold; font-size: 26px;\\\">Due This Week</ion-label>\\r\\n                  </ion-item>\\r\\n                </ion-card-header>\\r\\n              </ion-card>\\r\\n              <ion-card *ngFor=\\\"let item3 of thisWeekActionList | userExtract: terms;\\\" style=\\\"margin-bottom: 5px !important; border: none; box-shadow: none;\\\">\\r\\n                <ion-card-header class=\\\"ion-no-padding\\\" style=\\\"padding:0px !important\\\">\\r\\n                  <ion-item lines=\\\"none\\\">\\r\\n                    <ion-label style=\\\"color:#464644 !important;margin: 0px !important; font-weight: bold;\\\">{{item3.target_date ? (item3.target_date | date: 'EEEE dd') : '-'}}</ion-label>\\r\\n                  </ion-item>\\r\\n                </ion-card-header>\\r\\n                <ion-card-content class=\\\"ion-padding-top\\\">\\r\\n                  <ion-grid>\\r\\n                    <ion-row *ngIf=\\\"thisWeekActionList.length == 0\\\">\\r\\n                      <ion-col>\\r\\n                        <div style=\\\"text-align: center;\\\">\\r\\n                            No Actions\\r\\n                        </div>\\r\\n                      </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-card (click)=\\\"openModal('edit',item3)\\\" style=\\\"font-weight: normal; border: white; box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.08), 0 -6px 12px 0 rgba(255, 255, 255, 0.5);\\\">\\r\\n                      <ion-card-header>\\r\\n                        <ion-grid style=\\\"padding:0px\\\">\\r\\n                          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n                            <ion-col class=\\\"ion-align-self-center\\\"  style=\\\"padding:4px\\\">\\r\\n                              <span style=\\\"float:left; padding-left:4px; padding-top:4px; color: #363648;\\\"><i class=\\\"icon-sort\\\" [ngStyle]=\\\"{'border-color':item3.color}\\\"></i>{{item3.action}}</span>\\r\\n                            </ion-col>\\r\\n                          </ion-row>\\r\\n                        </ion-grid>\\r\\n                      </ion-card-header>\\r\\n                    </ion-card>\\r\\n                  </ion-grid>\\r\\n                </ion-card-content>\\r\\n              </ion-card>\\r\\n            </div>\\r\\n          </ion-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\\"height: 80px;\\\"></div>\\r\\n</ion-content>\\r\\n\"","import { MbscModule } from '@mobiscroll/angular';\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ActionsPage } from './actions.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ActionsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ \n    MbscModule,  \n    FormsModule,\r\nRouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ActionsPageRoutingModule {}\r\n","import { MbscModule } from '@mobiscroll/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ActionsPageRoutingModule } from './actions-routing.module';\r\n\r\nimport { ActionsPage } from './actions.page';\r\n\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ActionCreationPageModule } from '../action-creation/action-creation.module';\r\nimport { DatePipe } from '@angular/common';\r\nimport { SearchPageModule } from '../search/search.module';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { ActionDatePageModule } from '../action-date/action-date.module';\r\n\r\n@NgModule({\r\n  imports: [ \r\n    MbscModule,  \r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    DragDropModule,\r\n    ActionsPageRoutingModule,\r\n    SearchPageModule,\r\n    PipesModule,\r\n    ActionCreationPageModule,\r\n    ActionDatePageModule\r\n  ],\r\n  declarations: [ActionsPage],\r\n  providers:[DatePipe]\r\n})\r\nexport class ActionsPageModule {}\r\n","export default \".scrolling-wrapper-flexbox {\\n  display: flex;\\n  flex-wrap: nowrap;\\n  overflow-x: auto;\\n}\\n.scrolling-wrapper-flexbox .card {\\n  flex: 0 0 auto;\\n}\\n.scrolling-wrapper {\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  white-space: nowrap;\\n}\\n.scrolling-wrapper .card {\\n  display: inline-block;\\n  height: 100%;\\n}\\nion-card {\\n  margin: 10px 5px 5px 5px !important;\\n  border-radius: 6px;\\n  border: lightgray 1px solid;\\n  max-height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n}\\nion-card-content {\\n  overflow: scroll;\\n  padding: 4px;\\n  padding-bottom: 15px;\\n}\\nion-card-header {\\n  padding: 10px !important;\\n  text-align: center;\\n  width: 100%;\\n}\\nion-fab-button {\\n  --background: linear-gradient(133deg, #c354a3 23%, #3668a4 84%) !important;\\n}\\n.mbsc-mobiscroll .mbsc-cal-c {\\n  background-color: white !important;\\n}\\nmbsc-w-p mbsc-cal-c {\\n  background-color: white !important;\\n}\\n.mbsc-material .mbsc-cal-c {\\n  background-color: white !important;\\n}\\n.mbsc-fr-liq .mbsc-cal-c {\\n  background-color: white !important;\\n}\\n.mbsc-cal-c {\\n  background-color: white !important;\\n}\\n.example-container {\\n  width: 400px;\\n  max-width: 100%;\\n  margin: 0 25px 25px 0;\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n.example-list {\\n  min-height: 60px;\\n  background: white;\\n  border-radius: 0px 4px 4px 0px;\\n  overflow: hidden;\\n  display: block;\\n}\\n.example-box {\\n  padding: 20px 10px;\\n  border-bottom: solid 1px #ccc;\\n  color: rgba(0, 0, 0, 0.87);\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  box-sizing: border-box;\\n  cursor: move;\\n  background: white;\\n  font-size: 14px;\\n}\\n.cdk-drag-preview {\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\n}\\n.cdk-drag-placeholder {\\n  opacity: 0;\\n}\\n.cdk-drag-animating {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n.example-box:last-child {\\n  border: none;\\n}\\n.example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder) {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n.roundbutton {\\n  display: block;\\n  height: 25px;\\n  width: 25px;\\n  border-radius: 50%;\\n  background-color: white;\\n  text-align: center;\\n}\\nion-segment {\\n  --background:white;\\n  border-radius: 18px;\\n  width: 100%;\\n  box-shadow: 10px 10px 30px 0 rgba(174, 174, 192, 0.4);\\n}\\nion-segment-button {\\n  height: 68px;\\n  text-transform: capitalize;\\n  --indicator-box-shadow:transparent !important;\\n  --border-radius:18px !important;\\n  --border-color:lightgray;\\n  --padding:0 0.2em;\\n  --margin:0.5em;\\n  --background:white;\\n  --color-hover:rgb(125, 62, 120);\\n  --background-checked: linear-gradient(114deg, #c354a3 22%, #3668a4 82%);\\n  --color-checked:rgb(255,255,255);\\n  --indicator-color:transparent !important ;\\n}\\n.scroll-content {\\n  margin-bottom: 0 !important;\\n}\\n.icon-sort {\\n  border-left: 4px solid;\\n  padding: 10px 5px 10px 5px;\\n}\\n.icon-find {\\n  border: 1px solid #f18a11;\\n  padding: 1px;\\n  padding-top: 10px;\\n  padding-bottom: 10px;\\n  border-radius: 10px;\\n  margin-right: 10px;\\n}\\n.default-input {\\n  border: none;\\n  border-bottom: 2px solid #f18a11;\\n  width: 100%;\\n}\\ninput:focus {\\n  outline: none;\\n}\\n.check-icon {\\n  padding: 10px;\\n  margin-right: 11px;\\n  border: 1px solid #f3f3f3;\\n  border-radius: 50%;\\n  box-shadow: 10px 10px 20px 0 rgba(174, 174, 192, 0.4), inset 4px 4px 6px 0 #fbfbfb;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\r\nimport { mobiscroll,MbscCalendarOptions } from '@mobiscroll/angular';\r\nimport { ModalController, Platform } from '@ionic/angular';\r\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\r\nimport { ActionCreationPage } from '../action-creation/action-creation.page';\r\nimport { GlobalsService } from '../services/globals.service';\r\nimport { ApiServicesService } from '../services/api-services.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { SearchPage } from '../search/search.page';\r\nimport * as moment from 'moment';\r\nimport { ActionDatePageModule } from '../action-date/action-date.module';\r\nimport { ActionDatePage } from '../action-date/action-date.page';\r\n\r\n\r\nmobiscroll.settings = {\r\n\ttheme: 'ios',\r\n\tthemeVariant: 'light'\r\n};\r\nconst now = new Date();\r\n@Component({\r\n  selector: 'app-actions',\r\n  templateUrl: './actions.page.html',\r\n  styleUrls: ['./actions.page.scss'],\r\n})\r\nexport class ActionsPage implements OnInit {\r\n\r\n\tsegment: string;\r\n\r\n\tdisplayIfNoCategories = false;\r\n  \tallCatogeries: any[] = [];\r\n\tallActions: any[] = [];\r\n\tactionsDict: any = {};\r\n\tallCatogeriesActions = [];\r\n\tmodalType: string = 'NEW';\r\n\tsearchText: string = '';\r\n\tActionPriorities = [];\r\n\tAllGoals = [];\r\n\tAllobjectives = [];\r\n\tmiscellaneousCatogeryID = '';\r\n   click_previous_index = 0;\r\n\r\n   click_header_index = 0;\r\n\r\n    quickActionName = '';\r\n    showSearchbar:boolean = false;\r\n\tcalender_below_overdue = false;\r\n\tcalender_below_today = true;\r\n\tcalender_below_thisweek = false;\r\n\r\n\tdumpActions = [];\r\n\tchunkActions = [];\r\n\tdoActions = [];\r\n\r\n\toverdueActionList = [];\r\n\ttodayActionList = [];\r\n\tthisWeekActionList = [];\r\n\tbeyondList = [];\r\n\tsearchBy: any;\r\n\tchunkCount = 0;\r\n\tchunkTotalcount = this.chunkCount.toString().padStart(2, '0');\r\n\tcatogeryNames:any[] = [];\r\n\tcatogeryNames_1= ['moviesList'];\r\n\tvisible = false;\r\n\tsortvisible = false;\r\n\tmarkedDay: Date;\r\n\tmarkedDays = [];\r\n\tmarkedDays_strings = [];\r\n\r\n\tdays = [];\r\n\tdaysRequired = 6;\r\n\tanotherdate = [];\r\n\totherdays = 1;\r\n\tcollapse_all = true;\r\n\r\n\t//Toggle//\r\n\tcategoryToggle = false;\r\n\r\n\tdodate = true;\r\n\tduedate = false;\r\n\r\n\t// Do Tabs //\r\n\t\t// isCategory = true;\r\n\t\tisDo = true;\r\n\t\tisDue = false;\r\n\t\t// isPriority = false;\r\n\t\t// isCategoryEnb = \"normal\";\r\n\t\tisDoEnb = \"bold\";\r\n\t\tisDueEnb = \"normal\";\r\n\t\t// isPriorityEnb = \"normal\";\r\n\t\t// isCaActive = \"#363648\"\r\n\t\tisDoActive = \"#265b8f\"\r\n\t\tisDuActive = \"#363648\"\r\n\t\t// isPrActive = \"#363648\"\r\n\t// End Do Tabs //\r\n\r\n\t//Actions Data\r\n\tactions:any = {\r\n\t\t\"action\": \"\",\r\n\t\t\"objective_id\": null,\r\n\t\t\"created_user_id\":null,\r\n\t\t\"scheduled_date\": \"\",\r\n\t\t\"completed_date\": \"\",\r\n\t\t\"target_date\": \"\",\r\n\t\t\"description\": \"null\",\r\n\t\t\"remarks\": \"null\",\r\n\t\t\"priority_id\": null,\r\n\t\t\"action_category_id\": null,\r\n\t\t\"enterprise_id\": null,\r\n\t\t\"goal_id\": null,\r\n\t\t\"milestone_id\":null\r\n\t};\r\n\r\n//   listviewOptions: MbscListviewOptions = {\r\n//       theme: 'material',\r\n//       themeVariant: 'light',\r\n//       swipe: false\r\n//   };\r\n\r\n  deviceType = 'android';\r\n\r\n  constructor( private datapipe:DatePipe, private platform:Platform, private modalController: ModalController, private api:ApiServicesService, private globals:GlobalsService) {\r\n\r\n\tthis.countChunks();\r\n\r\n\r\n\tthis.platform.ready().then(() => {\r\n\t\tif (this.platform.is('android')) {\r\n\t\t\t console.log('android');\r\n\t\t\t this.deviceType = 'android';\r\n\t\t} else if (this.platform.is('ios')) {\r\n\t\t\t console.log('ios');\r\n\t\t\t this.deviceType = 'ios';\r\n\t\t} else {\r\n\t\t\t //fallback to browser APIs or\r\n\t\t\t this.deviceType = 'ios';\r\n\t\t\t console.log('The platform is not supported');\r\n\t\t}\r\n\t  });\r\n   }\r\n\r\n  ngOnInit() {\r\n\tthis.getCategoriesforActions();\r\n\tthis.segment = 'find';\r\n\r\n\tfor (let i = 0; i <= this.daysRequired; i++) {\r\n\t\tif (i == 0) {\r\n\t\t\tthis.days.push( \r\n\t\t\t\t{displayDate : 'Do Today',\r\n\t\t\t\t\tformatDate:moment().add(i, 'days').format('YYYY-MM-DD'),\r\n\t\t\t\t\tactions:[],\r\n\t\t\t\t\tid:\"chooseDate\"\r\n\t\t\t\t}\r\n\t\t\t );\r\n\t\t}else if(i == 1) {\r\n\t\t\tthis.days.push(\r\n\t\t\t\t{displayDate : 'Tomorrow',\r\n\t\t\t\t\tformatDate:moment().add(i, 'days').format('YYYY-MM-DD'),\r\n\t\t\t\t\tactions:[],\r\n\t\t\t\t\tid:\"chooseDate\"\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}else {\r\n\t\t\tthis.days.push( \r\n\t\t\t\t{displayDate : moment().add(i, 'days').format('dddd Do'),\r\n\t\t\t\t\tformatDate:moment().add(i, 'days').format('YYYY-MM-DD'),\r\n\t\t\t\t\tactions:[],\r\n\t\t\t\t\tid:\"chooseDate\"\r\n\t\t\t\t}\r\n\t\t\t );\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\tfor (let i = 0; i <= this.otherdays; i++) {\r\n\t\tif (i == 0) {\r\n\t\t\tthis.anotherdate.push( \r\n\t\t\t\t{displayDate1 : 'Another date',\r\n\t\t\t\t\tformatDate:moment().add(i, 'days').format('YYYY-MM-DD'),\r\n\t\t\t\t\tactions:[],\r\n\t\t\t\t\tid:\"chooseDate\"\r\n\t\t\t\t}\r\n\t\t\t );\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\tconsole.log(this.days)\r\n\tconsole.log(this.anotherdate)\r\n  }\r\n\r\n  segmentChanged(ev: any) {\r\n    console.log('Segment changed', ev);\r\n  }\r\n\r\n  segmentTab(ev: any) {\r\n    console.log('Segment changed', ev);\r\n  }\r\n\r\n  //Do Tab Click//\r\n//   click_Category(){\r\n//     console.log(\"clicked click_Category\");\r\n//     this.isCategory = true;\r\n//     this.isDo = false;\r\n//     this.isDue = false;\r\n//     this.isPriority = false;\r\n//     this.isCategoryEnb = \"bold\";\r\n//     this.isDoEnb = \"normal\";\r\n//     this.isDueEnb = \"normal\";\r\n// \tthis.isPriorityEnb = \"normal\";\r\n// \tthis.isCaActive = \"#265b8f\";\r\n// \tthis.isDoActive = \"#363648\"\r\n// \tthis.isDuActive = \"#363648\"\r\n// \tthis.isPrActive = \"#363648\"\r\n//   }\r\n\r\n  click_Do(){\r\n    console.log(\"clicked click_Category\");\r\n    // this.isCategory = false;\r\n    this.isDo = true;\r\n    this.isDue = false;\r\n    // this.isPriority = false;\r\n    // this.isCategoryEnb = \"normal\";\r\n    this.isDoEnb = \"bold\";\r\n    this.isDueEnb = \"normal\";\r\n\t// this.isPriorityEnb = \"normal\";\r\n\t// this.isCaActive = \"#363648\";\r\n\tthis.isDoActive = \"#265b8f\"\r\n\tthis.isDuActive = \"#363648\"\r\n\t// this.isPrActive = \"#363648\"\r\n\tthis.duedate = !this.duedate\r\n\tthis.dodate = !this.dodate\r\n  }\r\n\r\n  click_Due(){\r\n    console.log(\"clicked click_Category\");\r\n    // this.isCategory = false;\r\n    this.isDo = false;\r\n    this.isDue = true;\r\n    // this.isPriority = false;\r\n    // this.isCategoryEnb = \"normal\";\r\n    this.isDoEnb = \"normal\";\r\n    this.isDueEnb = \"bold\";\r\n\t// this.isPriorityEnb = \"normal\";\r\n\t// this.isCaActive = \"#363648\";\r\n\tthis.isDoActive = \"#363648\"\r\n\tthis.isDuActive = \"#265b8f\"\r\n\t// this.isPrActive = \"#363648\"\r\n\tthis.duedate = !this.duedate\r\n\tthis.dodate = !this.dodate\r\n  }\r\n\r\n//   click_Priority(){\r\n//     console.log(\"clicked click_Category\");\r\n//     this.isCategory = false;\r\n//     this.isDo = false;\r\n//     this.isDue = false;\r\n//     this.isPriority = true;\r\n//     this.isCategoryEnb = \"normal\";\r\n//     this.isDoEnb = \"normal\";\r\n//     this.isDueEnb = \"normal\";\r\n// \tthis.isPriorityEnb = \"bold\";\r\n// \tthis.isCaActive = \"#363648\";\r\n// \tthis.isDoActive = \"#363648\"\r\n// \tthis.isDuActive = \"#363648\"\r\n// \tthis.isPrActive = \"#265b8f\"\r\n//   }\r\n  //End Tab Click//\r\n\r\n  async openModal(type,input) {\r\n\r\n    console.log('Clicked objective modal');\r\n\t\tlet Categories_duplicate = [];\r\n\t\t\tfor(let i=0;i<this.allCatogeries.length;i++){\r\n\t\t\t  if(this.allCatogeries[i].name != 'Miscellaneous'){\r\n\t\t\t\tCategories_duplicate.push(this.allCatogeries[i]);\r\n\t\t\t  }\r\n\t\t\t  if(i == this.allCatogeries.length-1){\r\n\r\n\t\t\t\tfor(let j=0;j<Categories_duplicate.length;j++){\r\n\t\t\t\t\tif(Categories_duplicate[j].category_id == input.category_id){\r\n\t\t\t\t\t\tthis.click_header_index = j;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t}\r\n\r\n\t\tconst initialState = {\r\n\t\t\tmodalType: type,\r\n\t\t\tmodalData: input,\r\n\t\t\tmodalActions: this.ActionPriorities,\r\n\t\t\tmodalCatogeries: Categories_duplicate,\r\n\t\t\tmodalGoals: this.AllGoals,\r\n\t\t\tmodalObjectives: this.Allobjectives,\r\n\t\t\tmiscellaneousCatogeryID: this.miscellaneousCatogeryID\r\n\t\t};\r\n\r\n\r\n\r\n      const modal = await this.modalController.create({\r\n       component: ActionCreationPage,cssClass: 'action-modal-new',componentProps: initialState\r\n      });\r\n\r\n      modal.onDidDismiss().then((dataReturned) => {\r\n       if (dataReturned !== null) {\r\n\t    console.log(\"Modal got dismissed !\");\r\n\t\tthis.globals.hideLoading();\r\n\r\n\t\tthis.markedDay = new Date(dataReturned.data.data.target_date);\r\n        this.processCalenderEvents(this.markedDay);\r\n            if(dataReturned.data.data.close != \"CANCEL\"){\r\n                this.getCategoriesforActions();\r\n            }\r\n\t//     console.log(dataReturned.data.data); \r\n\t// \t\tif(dataReturned.data.data != \"CANCEL\"){\r\n\t// \t\t\tthis.getCategoriesforActions();\r\n\t// \t\t}\t\r\n    }\r\n      });\r\n      return await modal.present();\r\n\t }\r\n\r\n\tclickedheader(i){\r\n\t\tconsole.log(\"Clicked header index....  \"+ i);\r\n\t\tthis.click_header_index = i;\r\n\t\tthis.categoryToggle = !this.categoryToggle\r\n\t}\r\n\r\n\r\n\tdoRefresh(event){\r\n\t\tconsole.log(\"Do Refresh......\");\r\n\t\tconsole.log(event);\r\n\t\tthis.getCategoriesforActions();\r\n\t\tsetTimeout(() => {\r\n\t\t\tconsole.log('Async operation has ended');\r\n\t\t\tevent.target.complete();\r\n\t\t  }, 2000);\r\n\t}\r\n\r\n\t searchAction(){\r\n\t\tthis.showSearchbar = true;\r\n\r\n\t\t// console.log(\"search butto clicked....\");\r\n\t\t// const modal = await this.modalController.create({\r\n\t\t// \t   component: SearchPage,cssClass: 'custom-modal3'\r\n\t\t// \t  });\r\n\r\n\t\t// \t  modal.onDidDismiss().then((dataReturned) => {\r\n\t\t// \t   if (dataReturned !== null) {\r\n\t\t// \t\tconsole.log(dataReturned.data.data);\r\n\t\t// \t\tthis.searchText = dataReturned.data.data;\r\n\t\t// \t\tthis.refreshSearch();\r\n\t\t// \t    console.log(\"Modal got dismissed !\");\r\n\t\t//     }\r\n\t\t// \t  });\r\n\t\t// \t  return await modal.present();\r\n\r\n\t}\r\n\r\n\r\n\t  hideSearchbar(item){\r\n\t\tconsole.log(\"cancekl\")\r\n\t\tthis.showSearchbar = false;\r\n\t  }\r\n\r\n\r\n\trefreshSearch() {\r\n        console.log(\"Refresh search triggered...\");\r\n        this.searchBy = this.getSearchObject();\r\n        console.log(this.searchBy);\r\n        this.countChunks();\r\n    }\r\n    getSearchObject() {\r\n        let searchObj = {};\r\n        searchObj['action'] = this.searchText;\r\n        return searchObj;\r\n      }\r\n\r\n    //Get All Categories\r\n\tgetCategoriesforActions() {\r\n\t\tthis.catogeryNames = [];\r\n\t\tthis.catogeryNames_1= ['moviesList'];\r\n\t\tthis.allCatogeriesActions = [];\r\n\t\tthis.allCatogeries = [];\r\n    this.globals.showLoading('Please wait');\r\n    console.log(this.globals.enterprisedId);\r\n    console.log(this.globals.userId);\r\n\t\tthis.api.getCatagories(this.globals.enterprisedId, this.globals.userId).subscribe(\r\n\t\t\t(result) => {\r\n\t\t\t\tconsole.log(result.body);\r\n\t\t\t\tif (result.status == 200) {\r\n\t\t\t\t\tconsole.log(\"******************** Catogeries*************\");\r\n\t\t\t\t\tconsole.log(result.body);\r\n\t\t\t\t\tfor(let i=0;i<result.body.length;i++){\r\n\t\t\t\t\t\tif(result.body[i].name.toLowerCase().indexOf(\"category\") == -1){\r\n\t\t\t\t\t\t\tthis.allCatogeries.push(result.body[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(i == result.body.length-1){\r\n\t\t\t\t\t\t\tthis.allCatogeriesActions = this.allCatogeries;\r\n\t\t\t\t\t\t\tfor (let i = 0; i < this.allCatogeries.length; i++) {\r\n\t\t\t\t\t\t\t\tif (this.allCatogeries[i].name == 'Miscellaneous') {\r\n\t\t\t\t\t\t\t\t\tthis.miscellaneousCatogeryID = this.allCatogeries[i].category_id;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.getActionsUsingCategoryIDs();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// this.allCatogeries = result.body;\r\n\t\t\t\t\t// this.allCatogeriesActions = result.body;\r\n\r\n\t\t\t\t} else if (result.status == 204) {\r\n\t\t\t\t  \tthis.globals.hideLoading();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.globals.hideLoading();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(err) => {\r\n\t\t\t\tthis.globals.hideLoading();\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\t//Get All Actions based on categories.\r\n\tasync getActionsUsingCategoryIDs() {\r\n\t\tlet apiCallingCount = 0;\r\n\t\tfor (let i = 0; i < this.allCatogeries.length; i++) {\r\n\t\t\tawait this.api\r\n\t\t\t\t.getActions(\r\n\t\t\t\t\tthis.globals.enterprisedId,\r\n\t\t\t\t\tthis.globals.userId,\r\n\t\t\t\t\tthis.allCatogeries[i].category_id\r\n\t\t\t\t)\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\t(result) => {\r\n\t\t\t\t\t\tapiCallingCount++;\r\n\t\t\t\t\t\tif (result.status == 200) {\r\n\t\t\t\t\t\t\tconsole.log('Actions for each category');\r\n\t\t\t\t\t\t\tconsole.log('i Value : ' + i);\r\n\t\t\t\t\t\t\tconsole.log(result.body);\r\n\t\t\t\t\t\t\tthis.allCatogeriesActions[i]['actions'] = result.body;\r\n\t\t\t\t\t\t} else if (result.status == 204) {\r\n\t\t\t\t\t\t\t// this.allActions.push([]);\r\n\t\t\t\t\t\t\tthis.allCatogeriesActions[i]['actions'] = [];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// this.allActions.push([]);\r\n\t\t\t\t\t\t\tthis.allCatogeriesActions[i]['actions'] = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.countChunks();\r\n\r\n\t\t\t\t\t\tif (apiCallingCount == this.allCatogeries.length) {\r\n\t\t\t\t\t\t\tconsole.log('Final call can be Done here.');\r\n\t\t\t\t\t\t\tconsole.log('All Categories.');\r\n\t\t\t\t\t\t\tconsole.log(this.allCatogeries);\r\n\t\t\t\t\t\t\tconsole.log('All Categories with actions.');\r\n\t\t\t\t\t\t\tconsole.log(this.allCatogeriesActions);\r\n\t\t\t\t\t\t\tthis.processData();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(err) => {\r\n\t\t\t\t\t\tapiCallingCount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tcountChunks() {\r\n\t\tconsole.log('Chunks count is called.... ');\r\n\t\tthis.chunkCount = 0;\r\n\r\n\t\tif(this.chunkActions.length == 0){\r\n\t\t\tthis.chunkCount = 0;\r\n\t\t\tthis.chunkTotalcount = this.chunkCount.toString().padStart(2, '0');\r\n\t\t\tconsole.log(this.chunkCount);\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.chunkActions.length; i++) {\r\n\t\t\tthis.chunkCount = this.chunkCount + this.chunkActions[i].actions.length;\r\n\t\t\tif (i == this.chunkActions.length - 1) {\r\n        console.log('Chunk count....');\r\n        this.chunkTotalcount = this.chunkCount.toString().padStart(2, '0');\r\n\t\t\t\tconsole.log(this.chunkCount);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trefreshPageData() {\r\n\t\t/* Page refresh method will be called here */\r\n\t\tconsole.log(\"Refresh Actions Page\");\r\n\t\tthis.getCategoriesforActions();\r\n\t}\r\n\r\n\r\n\r\n\topenActionsModal(type, input) {\r\n\r\n\t\t// this.modalRef = this.modalService.show(\r\n\t\t// \tActionsCreateComponent,\r\n\t\t// \tObject.assign({ initialState }, { class: 'gray modal-lg' })\r\n\t\t// );\r\n\r\n\t\t// this.modalRef.content.eventT.subscribe((data) => {\r\n\t\t// \tconsole.log(\"Child component's event was triggered\", data);\r\n\t\t// \tif (data == 'true') {\r\n\t\t// \t\t/* Actions loading method should be called here */\r\n    //     console.log('Actions create page loaded....');\r\n    //     this.getCategoriesforActions();\r\n\t\t// \t}\r\n\t\t// });\r\n\t}\r\n\r\n\topenDeleteConfirmDialog(action) {\r\n\r\n    this.api.deleteActions(this.globals.enterprisedId,action.action_id).subscribe((result)=>{\r\n      console.log(result);\r\n      if(result.status == 200){\r\n        console.log(result);\r\n       // this.sweetAlertDisplay(\"Action Deleted successfully\", true);\r\n        this.getCategoriesforActions();\r\n      }else{\r\n        console.log(\"Delete Api server error.\");\r\n        //this.sweetAlertDisplay(\"Action Deleted failed\", true);\r\n      }\r\n    },(error)=>{\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getDetailsofClick(data) {\r\n    console.log(data);\r\n    this.processCalenderEvents(data.valueText);\r\n    console.log(new Date(data.valueText));\r\n  }\r\n\r\n// a and b are javascript Date objects\r\n dateDiffInDays(a, b) {\r\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n  // Discard the time and time-zone information.\r\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n\r\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY);\r\n}\r\n\r\n\tclickheader(data, src) {\r\n\t\tif(src == 'find') {\r\n\t\t\tthis.chunkActions[data].visible = !this.chunkActions[data].visible;\r\n\t\t} else {\r\n\t\t\tthis.chunkActions[data].sortvisible = !this.chunkActions[data].sortvisible;\r\n\t\t}\r\n\t\t\r\n\t\t// console.log('Header clicked');\r\n\t\t// console.log(data);\r\n\r\n\t\t// if(data != this.click_previous_index){\r\n\t\t//   this.chunkActions[data].visible = true;\r\n\t\t//   this.chunkActions[this.click_previous_index].visible = false;\r\n\t\t// }else{\r\n\t\t//   this.chunkActions[data].visible = !this.chunkActions[data].visible ;\r\n\t\t// }\r\n\t\t// this.click_previous_index = data;\r\n\t}\r\n\r\n\tasync onDrop(event: CdkDragDrop<string[]>) {\r\n\t\tconsole.log('Event Triggered....');\r\n\t\tconsole.log(event);\r\n\t\t// if (this.dumpActions == 0) {\r\n\r\n\t\t// }\r\n\t\tif(event.previousContainer.id == 'moviesList' && event.container.id== 'chooseDate'){\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (event.previousContainer === event.container) {\r\n\t\t\tmoveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n\t\t\tconsole.log('SAME container......');\r\n\t\t}else if(event.container.id== 'chooseDate') {\r\n\t\t\t// this.modalRef = this.modalService.show(AddDateComponent, { class: 'gray modal-md' });\r\n\t\t\ttransferArrayItem(\r\n\t\t\t\tevent.previousContainer.data,\r\n\t\t\t\tevent.container.data,\r\n\t\t\t\tevent.previousIndex,\r\n\t\t\t\tevent.currentIndex\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t\r\n\t\t\tlet substract_index = 0;\r\n\t\t\tif(event.currentIndex == 0){\r\n\t\t\t\tsubstract_index = 0;\r\n\t\t\t}else if(event.currentIndex == 1){\r\n\t\t\t\tsubstract_index = 1;\r\n\t\t\t}else{\r\n\t\t\t\tsubstract_index = 2\r\n\t\t\t}\r\n\t\t\ttransferArrayItem(\r\n\t\t\t\tevent.previousContainer.data,\r\n\t\t\t\tevent.container.data,\r\n\t\t\t\tevent.previousIndex,\r\n\t\t\t\tevent.currentIndex-substract_index\r\n\t\t\t);\r\n\r\n    \tconsole.log('other container......');\r\n\t\tconsole.log(this.chunkActions);\r\n\t\tconsole.log(this.dumpActions);\r\n\t\tconsole.log(event.currentIndex-substract_index);\r\n\t\tconsole.log(event.container.id);\r\n\t\tfor(let i=0;i< this.chunkActions.length;i++){\r\n\r\n\t\t\tif(this.chunkActions[i].name == event.container.id){\r\n\t\t\tconsole.log('*********');\r\n\t\t\tconsole.log(i);\r\n\t\t\tconsole.log(this.chunkActions[i]);\r\n\t\t\tconsole.log(this.chunkActions[i].actions);\r\n\t\t\tconsole.log(this.chunkActions[i].actions[event.currentIndex-substract_index]);\r\n\t\t\tconsole.log(this.chunkActions[i].actions[event.currentIndex-substract_index]['action_category_id']);\r\n\t\t\tthis.chunkActions[i].actions[event.currentIndex-substract_index]['action_category_id'] = this.chunkActions[i].category_id;\r\n\t\t\tthis.chunkActions[i].actions[event.currentIndex-substract_index]['category_name'] = this.chunkActions[i].name;\r\n\t\t\tthis.updateOnDragDrop(this.chunkActions[i].actions[event.currentIndex-substract_index]);\r\n\r\n\t\t\t}\r\n      \t}\r\n\t\tthis.countChunks();\r\n\t\t}\r\n  }\r\n\r\n  onDropFind(event: CdkDragDrop<string[]>) {\r\n\tconsole.log('Event Triggered....');\r\n\tconsole.log(event);\r\n\tif (event.previousContainer === event.container) {\r\n\t\tmoveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n\t\tconsole.log('SAME container......');\r\n\t} else {\r\n\t\ttransferArrayItem(\r\n\t\t\tevent.previousContainer.data,\r\n\t\t\tevent.container.data,\r\n\t\t\tevent.previousIndex-2,\r\n\t\t\tevent.currentIndex\r\n\t\t);\r\n\tconsole.log('other container......');\r\n\r\n  console.log(this.chunkActions);\r\n  console.log(this.dumpActions);\r\n  console.log(event.currentIndex);\r\n  console.log(event.container.id);\r\n\r\n\r\nthis.dumpActions[event.currentIndex]['action_category_id'] = this.miscellaneousCatogeryID;\r\nthis.dumpActions[event.currentIndex]['category_name'] = 'Miscellaneous';\r\nthis.updateOnDragDrop(this.dumpActions[event.currentIndex]);\r\n\r\n  this.countChunks();\r\n\r\n\t}\r\n}\r\n\r\n\tonDropDate(event: CdkDragDrop<string[]>,date){\r\n\t\tconsole.log('Event Triggered....');\r\n\t\tconsole.log(event);\r\n\r\n\t\t// if (this.dumpActions == 0) {\r\n\r\n\t\t// }\r\n\t\tif(event.previousContainer.id == 'moviesList' && event.container.id == 'chooseDate'){\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (event.previousContainer === event.container) {\r\n\t\t\tmoveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n\t\t\tconsole.log('SAME container......');\r\n\t\t}else if(event.container.id== 'chooseDate') {\r\n\r\n\t\t\t// call update function here  with below parameters\r\n\t\t\tconsole.log(event.item.data); // item data\r\n\t\t\tconsole.log(date) // date\r\n\r\n\t\t\ttransferArrayItem(\r\n\t\t\t\tevent.previousContainer.data,\r\n\t\t\t\tevent.container.data,\r\n\t\t\t\tevent.previousIndex-2,\r\n\t\t\t\tevent.currentIndex\r\n\t\t\t);\r\n\r\n\t\t\t//this.modalRef = this.modalService.show(AddDateComponent, { class: 'gray modal-md' });\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync anotherDate(event: CdkDragDrop<string[]>,date){\r\n\t\tconsole.log('Event Triggered....');\r\n\t\tconsole.log(event);\r\n\t\t\r\n\t\tif(event.previousContainer.id == 'moviesList' && event.container.id == 'chooseDate'){\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (event.previousContainer === event.container) {\r\n\t\t\tmoveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n\t\t\tconsole.log('SAME container......');\r\n\t\t}else if(event.container.id== 'chooseDate') {\r\n\r\n\t\t\t// call update function here  with below parameters\r\n\t\t\tconsole.log(event.item.data); // item data\r\n\t\t\tconsole.log(date) // date\r\n\r\n\t\t\ttransferArrayItem(\r\n\t\t\t\tevent.previousContainer.data,\r\n\t\t\t\tevent.container.data,\r\n\t\t\t\tevent.previousIndex,\r\n\t\t\t\tevent.currentIndex\r\n\t\t\t);\r\n\r\n\t\t\tconst modal = await this.modalController.create({\r\n\t\t\t\t   component: ActionDatePage,cssClass: 'action-modal-date'\r\n\t\t  \t});\r\n\t\t\treturn await modal.present();\r\n\t\t}\r\n\t}\r\n\r\n  updateOnDragDrop(dataReceived){\r\n\r\n    console.log(\"Data Received\");\r\n    console.log(dataReceived);\r\n\r\n   let update_actions = {\r\n      \"action\":dataReceived.action ? dataReceived.action : \"\",\r\n      \"objective_id\": dataReceived.objective_id ?  dataReceived.objective_id :\"null\",\r\n      \"created_user_id\":this.globals.userId,\r\n      \"scheduled_date\": dataReceived.scheduled_date ? this.datapipe.transform(dataReceived.scheduled_date, 'yyyy-MM-dd hh:mm:ss') :  \"\",\r\n      \"completed_date\": dataReceived.completed_date ? this.datapipe.transform(dataReceived.completed_date, 'yyyy-MM-dd hh:mm:ss') : \"\",\r\n      \"target_date\": dataReceived.target_date ? this.datapipe.transform(dataReceived.target_date, 'yyyy-MM-dd hh:mm:ss') : \"\",\r\n      \"description\": dataReceived.description ? dataReceived.description: \"\",\r\n      \"remarks\": dataReceived.remarks ? dataReceived.remarks : \"null\",\r\n      \"priority_id\": dataReceived.priority_id ?dataReceived.priority_id :\"null\",\r\n      \"action_category_id\": dataReceived.action_category_id  ? dataReceived.action_category_id : \"null\",\r\n      \"enterprise_id\": this.globals.enterprisedId,\r\n\t  \"goal_id\": dataReceived.goal_id ? dataReceived.goal_id : \"null\",\r\n\t  \"milestone_id\":dataReceived.milestone_id ? dataReceived.milestone_id : \"null\"\r\n    };\r\n\r\n    console.log(update_actions);\r\n    this.api.updateActions(update_actions,dataReceived.action_id).subscribe((result)=>{\r\n      console.log(result);\r\n      if(result.status == 200){\r\n        console.log(\"Succesfully updated.\");\r\n      }else{\r\n        console.log('Api error');\r\n      }\r\n    },(error)=>{\r\n      console.log(error);\r\n    })\r\n\r\n  }\r\n\r\n\t// Data for processing Display Actions into dump, chunk & do .\r\n\tprocessData() {\r\n\t\tif(this.allCatogeriesActions.length == 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconsole.log(\"Data process Started....\");\r\n\t\tthis.chunkActions = [];\r\n\t\tthis.dumpActions = [];\r\n\t\tthis.doActions = [];\r\n\t\tfor (let i = 0; i < this.allCatogeriesActions.length; i++) {\r\n\t\t\tfor (let j = 0; j < this.allCatogeriesActions[i].actions.length; j++) {\r\n\t\t\t\tthis.allActions.push(this.allCatogeriesActions[i].actions[j]);\r\n\t\t\t}\r\n\t\t\tif (this.allCatogeriesActions[i].name == 'Miscellaneous') {\r\n\t\t\t\tthis.dumpActions = this.allCatogeriesActions[i].actions;\r\n\t\t\t} else {\r\n\t\t\t\tthis.catogeryNames.push(this.allCatogeriesActions[i].name);\r\n\t\t\t\tthis.catogeryNames_1.push(this.allCatogeriesActions[i].name);\r\n\t\t\t\tthis.allCatogeriesActions[i]['visible'] = false;\r\n        let chunkactionfilter = [];\r\n        if(this.allCatogeriesActions[i].actions.length == 0){\r\n          this.chunkActions.push(this.allCatogeriesActions[i]);\r\n        }\r\n\t\t\t\tfor (let h = 0; h < this.allCatogeriesActions[i].actions.length; h++) {\r\n          // console.log(this.allCatogeriesActions[i].actions[h]['target_date']);\r\n          // console.log('*************************');\r\n          // console.log(this.allCatogeriesActions[i].actions[h]['target_date'].indexOf('1900'));\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.allCatogeriesActions[i].actions[h]['target_date'] == null ||\r\n            this.allCatogeriesActions[i].actions[h]['target_date'] == '' ||\r\n            this.allCatogeriesActions[i].actions[h]['target_date'].indexOf('1900') != -1\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tchunkactionfilter.push(this.allCatogeriesActions[i].actions[h]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet assignitem = this.allCatogeriesActions[i].actions[h];\r\n\t\t\t\t\t\tassignitem['color'] = this.allCatogeriesActions[i].color;\r\n\t\t\t\t\t\tassignitem['name'] = this.allCatogeriesActions[i].name;\r\n\t\t\t\t\t\tthis.doActions.push(assignitem);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (h == this.allCatogeriesActions[i].actions.length - 1) {\r\n\t\t\t\t\t\tthis.countChunks();\r\n\t\t\t\t\t\tlet dummy = this.allCatogeriesActions[i];\r\n\t\t\t\t\t\tdummy['actions'] = chunkactionfilter;\r\n\t\t\t\t\t\tthis.chunkActions.push(dummy);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (i == this.allCatogeriesActions.length - 1) {\r\n\t\t\t\tif(this.chunkActions.length > 0){\r\n\t\t\t\t\tthis.displayIfNoCategories = false;\r\n\t\t\t\t\tthis.chunkActions[this.click_header_index]['visible'] = true;\r\n\t\t\t\t\tthis.chunkActions[this.click_header_index]['sortvisible'] = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.displayIfNoCategories = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.globals.hideLoading();\r\n\t\t\t\tthis.countChunks();\r\n\t\t\t\tconsole.log('Dump Actions');\r\n\t\t\t\tconsole.log(this.dumpActions);\r\n\t\t\t\tconsole.log('Chunk Actions');\r\n\t\t\t\tconsole.log(this.chunkActions);\r\n\t\t\t\tconsole.log('DO Actions');\r\n\t\t\t\tconsole.log(this.doActions);\r\n\t\t\t\tconsole.log(\"Chunk count\");\r\n\t\t\t\tconsole.log(this.chunkCount);\r\n\t\t\t\tconsole.log('Catogery Names');\r\n\t\t\t\tconsole.log(this.catogeryNames);\r\n\t\t\t\tconsole.log(this.catogeryNames_1);\r\n\t\t\t\tthis.processCalenderEvents(new Date());\r\n\t\t\t\tthis.getCreatePageDropdownData();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// { d: new Date(now.getFullYear(), now.getMonth(), 2), color: '#46c4f3' }\r\n\tprocessCalenderEvents(datedata) {\r\n\t\tthis.overdueActionList = [];\r\n\t\tthis.todayActionList = [];\r\n    this.thisWeekActionList = [];\r\n\tthis.markedDays =[];\r\n\tthis.markedDays_strings = [];\r\n\tthis.beyondList = [];\r\n\r\n\t\tfor (let i = 0; i < this.doActions.length; i++) {\r\n      let now = new Date(this.doActions[i].target_date);\r\n\r\n\t\t\tlet insertData = {\r\n\t\t\t\td: new Date(now.getFullYear(), now.getMonth(), now.getDate()),\r\n\t\t\t\tcolor: this.doActions[i].color\r\n\t\t\t};\r\n\t\t\tthis.markedDays.push(insertData);\r\n\t\t\tthis.markedDays_strings.push(JSON.stringify(insertData));\r\n\r\n\r\n        let then = new Date(datedata);\r\n        let DaysDifference  = this.dateDiffInDays(then, now);\r\n        console.log(DaysDifference);\r\n\r\n\t\t\t\tif (DaysDifference < 0) {\r\n\t\t\t\t\tthis.overdueActionList.push(this.doActions[i]);\r\n\t\t\t\t} else if (DaysDifference == 0) {\r\n\t\t\t\t\tthis.todayActionList.push(this.doActions[i]);\r\n\t\t\t\t} else if (DaysDifference >= 1 && DaysDifference <= 7) {\r\n\t\t\t\t\tthis.thisWeekActionList.push(this.doActions[i]);\r\n\t\t\t\t} else{\r\n\t\t\t\t\tthis.beyondList.push(this.doActions[i]);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\tif (i == this.doActions.length - 1) {\r\n\t\t\t\tconsole.log('Marked days');\r\n\t\t\t\tconsole.log(this.markedDays);\r\n\t\t\t\tconsole.log('DIFF DAYS LOG');\r\n\t\t\t\tconsole.log(this.overdueActionList);\r\n\t\t\t\tconsole.log(this.todayActionList);\r\n\t\t\t\tconsole.log(this.thisWeekActionList);\r\n\t\t\t\tconsole.log(this.beyondList);\r\n\t\t\t\tlet filter_list = [];\r\n\t\t\t\tlet assign_list = [];\r\n\t\t\t\tfor(let i=0;i<this.markedDays.length;i++){\r\n\t\t\t\t\tif(i==0){\r\n\t\t\t\t\t\tfilter_list.push(this.markedDays_strings[i]);\r\n\t\t\t\t\t\tassign_list.push(this.markedDays[i]);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(filter_list.includes(this.markedDays_strings[i])){\r\n\t\t\t\t\t\t\t\t//skip\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tfilter_list.push(this.markedDays_strings[i]);\r\n\t\t\t\t\t\t\t\tassign_list.push(this.markedDays[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(i == this.markedDays.length-1){\r\n\t\t\t\t\t\t\tconsole.log(\"Filtered list\");\r\n\t\t\t\t\t\t\tconsole.log(assign_list);\r\n\t\t\t\t\t\t\tthis.markedDays = assign_list;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t//Get All Data by calling API's for create Action Page.\r\n\tgetCreatePageDropdownData() {\r\n\t\tthis.api.getPriorities(this.globals.enterprisedId).subscribe(\r\n\t\t\t(result) => {\r\n\t\t\t\tif (result.status == 200) {\r\n\t\t\t\t\tthis.ActionPriorities = result.body;\r\n\t\t\t\t\tconsole.log('Priorities...');\r\n\t\t\t\t\tconsole.log(result.body);\r\n\t\t\t\t} else {\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.log('Get Priorities error....');\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tthis.api.getGoals(this.globals.userId,this.globals.enterprisedId).subscribe(\r\n\t\t\t(result) => {\r\n\t\t\t\tconsole.log('Get all Goals...');\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tif (result.status == 200) {\r\n\t\t\t\t\tthis.AllGoals = result.body;\r\n\t\t\t\t} else {\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.log('Get All Goals error....');\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tthis.api\r\n\t\t\t.getObjectives(this.globals.userId,this.globals.enterprisedId)\r\n\t\t\t.subscribe(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\tconsole.log('Get all Objectives...');\r\n\t\t\t\t\tconsole.log(result);\r\n\t\t\t\t\tif (result.status == 200) {\r\n\t\t\t\t\t\tthis.Allobjectives = result.body;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tconsole.log('Get All Objectives error....');\r\n\t\t\t\t}\r\n\t\t\t);\r\n  }\r\n\r\n  triggerQUickAction(event){\r\n    console.log(\"Quick Action Triggered.\");\r\n    console.log(event);\r\n\tconsole.log(this.quickActionName);\r\n\r\n\tif(this.quickActionName == ''){\r\n\t\treturn;\r\n\t}\r\n   let quick_actions = {\r\n      \"action\": this.quickActionName,\r\n      \"objective_id\": 'null',\r\n      \"created_user_id\":this.globals.userId,\r\n      \"scheduled_date\": \"\",\r\n      \"completed_date\": \"\",\r\n      \"target_date\": \"\",\r\n      \"description\": \"\",\r\n      \"remarks\": \"null\",\r\n      \"priority_id\":  this.ActionPriorities[2].priority_id,\r\n      \"action_category_id\": this.miscellaneousCatogeryID ? this.miscellaneousCatogeryID :'null',\r\n      \"enterprise_id\": this.globals.enterprisedId,\r\n\t  \"goal_id\": \"null\",\r\n\t  \"milestone_id\":\"null\"\r\n    };\r\n    this.globals.showLoading('Please wait....');\r\n    console.log(quick_actions);\r\n    this.api.createActions(quick_actions).subscribe((result)=>{\r\n      console.log('Action creation is successful');\r\n      console.log(result);\r\n      this.globals.hideLoading();\r\n      if(result.status ==200){\r\n        //this.sweetAlertDisplay(\"Action created successfully\", true);\r\n        this.quickActionName = '';\r\n        this.globals.hideLoading();\r\n\r\n        this.getCategoriesforActions();\r\n      }else{\r\n       // this.sweetAlertDisplay(\"Action Creation failed, Try Again\", false);\r\n        this.globals.hideLoading();\r\n      }\r\n\r\n\r\n    },(error)=>{\r\n      console.log('Action creation Failed.');\r\n      console.log(error);\r\n     this.globals.hideLoading();\r\n      //this.sweetAlertDisplay(\"Action Creation failed, Try Again\", false);\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"actions-actions-module-es5.js"}